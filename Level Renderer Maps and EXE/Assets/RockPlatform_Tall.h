// "RockPlatform_Tall.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "RockPlatform_Tall.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _RockPlatform_Tall_version_
const char RockPlatform_Tall_version[4] = { '0','1','9','d' };
#define _RockPlatform_Tall_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _RockPlatform_Tall_vertexcount_
const unsigned RockPlatform_Tall_vertexcount = 194;
#define _RockPlatform_Tall_vertexcount_
#endif
#ifndef _RockPlatform_Tall_indexcount_
const unsigned RockPlatform_Tall_indexcount = 864;
#define _RockPlatform_Tall_indexcount_
#endif
#ifndef _RockPlatform_Tall_materialcount_
const unsigned RockPlatform_Tall_materialcount = 1; // can be used for batched draws
#define _RockPlatform_Tall_materialcount_
#endif
#ifndef _RockPlatform_Tall_meshcount_
const unsigned RockPlatform_Tall_meshcount = 1;
#define _RockPlatform_Tall_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _RockPlatform_Tall_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT RockPlatform_Tall_vertices[194] =
{
	{	{ -1.086092f, 4.062748f, -0.494711f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.904200f, 0.253900f, -0.343300f }	},
	{	{ -1.147960f, 3.830815f, -0.503011f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.918500f, 0.207100f, -0.336700f }	},
	{	{ -1.230081f, 3.830880f, -0.014966f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.976300f, 0.216400f, 0.003500f }	},
	{	{ -1.164248f, 4.063729f, -0.033244f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.962000f, 0.272900f, -0.007900f }	},
	{	{ -0.852136f, 4.061795f, -0.880450f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.680100f, 0.235700f, -0.694200f }	},
	{	{ -0.901496f, 3.830786f, -0.911030f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.695000f, 0.199400f, -0.690800f }	},
	{	{ -1.792293f, 0.373363f, 0.001165f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.999500f, 0.030400f, 0.000500f }	},
	{	{ -1.672803f, 0.373371f, 0.717664f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.937100f, 0.030100f, 0.347700f }	},
	{	{ -1.147873f, 3.830959f, 0.472328f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.910600f, 0.232200f, 0.341900f }	},
	{	{ -1.672812f, 0.373357f, -0.715409f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.937600f, 0.029800f, -0.346500f }	},
	{	{ -1.042250f, 4.177111f, -0.051485f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.674500f, 0.738200f, -0.009400f }	},
	{	{ -0.971171f, 4.173355f, -0.462706f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.634800f, 0.732300f, -0.246500f }	},
	{	{ -1.086092f, 4.062748f, -0.494711f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.638400f, 0.732200f, -0.237200f }	},
	{	{ -1.164248f, 4.063729f, -0.033244f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.673200f, 0.739400f, 0.007200f }	},
	{	{ -0.817218f, 4.221864f, -0.066714f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.138100f, 0.990400f, -0.001200f }	},
	{	{ -0.760452f, 4.215066f, -0.446868f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.135700f, 0.988200f, -0.070500f }	},
	{	{ -0.971171f, 4.173355f, -0.462706f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.187000f, 0.979400f, -0.076100f }	},
	{	{ -1.042250f, 4.177111f, -0.051485f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.191600f, 0.981500f, 0.001400f }	},
	{	{ -0.760244f, 4.169620f, -0.806706f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.477200f, 0.727500f, -0.493000f }	},
	{	{ -0.852136f, 4.061795f, -0.880450f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.488600f, 0.728400f, -0.480300f }	},
	{	{ -0.645509f, 4.201333f, -0.704731f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.125100f, 0.983900f, -0.127200f }	},
	{	{ -0.760244f, 4.169620f, -0.806706f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.151500f, 0.976900f, -0.150600f }	},
	{	{ -1.086023f, 4.062862f, 0.428260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.598800f, 0.765100f, 0.236600f }	},
	{	{ -0.971121f, 4.173439f, 0.361839f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.609000f, 0.762500f, 0.218400f }	},
	{	{ -0.852019f, 4.061990f, 0.812872f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.430900f, 0.787000f, 0.441400f }	},
	{	{ -0.760161f, 4.169760f, 0.707190f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.438100f, 0.786700f, 0.434900f }	},
	{	{ -0.971121f, 4.173439f, 0.361839f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.177000f, 0.981400f, 0.074900f }	},
	{	{ -0.760418f, 4.215122f, 0.317712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.129500f, 0.989400f, 0.065300f }	},
	{	{ -0.760161f, 4.169760f, 0.707190f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.136300f, 0.980900f, 0.138600f }	},
	{	{ -0.645453f, 4.201427f, 0.584127f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.115900f, 0.986400f, 0.116600f }	},
	{	{ -1.086023f, 4.062862f, 0.428260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.897000f, 0.300700f, 0.324000f }	},
	{	{ -1.314342f, 0.373379f, 1.314716f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.705600f, 0.030800f, 0.708000f }	},
	{	{ -0.901349f, 3.831032f, 0.878093f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.680400f, 0.248600f, 0.689300f }	},
	{	{ -0.852019f, 4.061990f, 0.812872f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.668700f, 0.329900f, 0.666300f }	},
	{	{ -0.462839f, 4.062953f, 1.043662f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.322300f, 0.335800f, 0.885100f }	},
	{	{ -0.490522f, 3.831075f, 1.121552f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.331500f, 0.251200f, 0.909400f }	},
	{	{ 0.002452f, 3.831097f, 1.202329f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000700f, 0.249400f, 0.968400f }	},
	{	{ 0.003902f, 4.063898f, 1.120303f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.002000f, 0.333000f, 0.942900f }	},
	{	{ 0.000001f, 0.373385f, 1.792319f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000300f, 0.034000f, 0.999400f }	},
	{	{ 0.716915f, 0.373386f, 1.672796f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.346200f, 0.032900f, 0.937600f }	},
	{	{ 0.495418f, 3.831104f, 1.120049f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.333400f, 0.248900f, 0.909300f }	},
	{	{ -0.716912f, 0.373383f, 1.672947f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.345400f, 0.032700f, 0.937900f }	},
	{	{ 0.005304f, 4.177223f, 0.983415f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.001400f, 0.774900f, 0.632100f }	},
	{	{ -0.411744f, 4.173497f, 0.914493f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.214200f, 0.782400f, 0.584800f }	},
	{	{ -0.462839f, 4.062953f, 1.043662f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.217600f, 0.782600f, 0.583300f }	},
	{	{ 0.003902f, 4.063898f, 1.120303f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000200f, 0.774900f, 0.632100f }	},
	{	{ 0.006453f, 4.221923f, 0.747514f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000200f, 0.991200f, 0.132600f }	},
	{	{ -0.380198f, 4.215148f, 0.693597f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.064000f, 0.989800f, 0.127500f }	},
	{	{ -0.411744f, 4.173497f, 0.914493f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.070900f, 0.982200f, 0.173900f }	},
	{	{ 0.005304f, 4.177223f, 0.983415f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.983100f, 0.183100f }	},
	{	{ 0.470588f, 4.062975f, 1.042468f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.219400f, 0.779800f, 0.586400f }	},
	{	{ 0.422155f, 4.173513f, 0.913624f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.218100f, 0.779700f, 0.586900f }	},
	{	{ 0.859701f, 4.062047f, 0.809916f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.436500f, 0.781600f, 0.445500f }	},
	{	{ 0.770368f, 4.169800f, 0.705136f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.445100f, 0.781200f, 0.437800f }	},
	{	{ 0.422155f, 4.173513f, 0.913624f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.071400f, 0.982000f, 0.174600f }	},
	{	{ 0.392752f, 4.215162f, 0.692895f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.064600f, 0.989700f, 0.128000f }	},
	{	{ 0.770368f, 4.169800f, 0.705136f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.137800f, 0.980600f, 0.139700f }	},
	{	{ 0.657294f, 4.201457f, 0.582612f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.117100f, 0.986200f, 0.117200f }	},
	{	{ 0.470588f, 4.062975f, 1.042468f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.327100f, 0.331100f, 0.885100f }	},
	{	{ 1.314342f, 0.373386f, 1.314340f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.706200f, 0.031100f, 0.707300f }	},
	{	{ 0.906219f, 3.831104f, 0.874336f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.683000f, 0.243900f, 0.688500f }	},
	{	{ 0.859701f, 4.062047f, 0.809916f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.674400f, 0.320200f, 0.665400f }	},
	{	{ -1.314357f, 0.373354f, -1.312686f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.707000f, 0.029700f, -0.706600f }	},
	{	{ 1.093719f, 4.062975f, 0.422407f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.901300f, 0.288500f, 0.323300f }	},
	{	{ 1.152700f, 3.831104f, 0.464814f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.912700f, 0.225900f, 0.340600f }	},
	{	{ 1.234856f, 3.831097f, -0.026237f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.977700f, 0.210200f, 0.002600f }	},
	{	{ 1.171951f, 4.063898f, -0.042023f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.965000f, 0.262000f, -0.007100f }	},
	{	{ 1.792283f, 0.373385f, 0.000038f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.999600f, 0.029600f, 0.000400f }	},
	{	{ 1.672796f, 0.373383f, -0.716762f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.937600f, 0.027900f, -0.346700f }	},
	{	{ 1.152682f, 3.831075f, -0.516536f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.919100f, 0.202500f, -0.338000f }	},
	{	{ 1.672798f, 0.373386f, 0.716913f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.937300f, 0.030200f, 0.347100f }	},
	{	{ 1.052791f, 4.177223f, -0.057296f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.682400f, 0.730900f, -0.008100f }	},
	{	{ 0.981499f, 4.173514f, 0.357965f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.617800f, 0.754700f, 0.220600f }	},
	{	{ 1.093719f, 4.062975f, 0.422407f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.607800f, 0.757400f, 0.238600f }	},
	{	{ 1.171951f, 4.063898f, -0.042023f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.681500f, 0.731800f, 0.006000f }	},
	{	{ 0.830089f, 4.221923f, -0.069795f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.139100f, 0.990300f, -0.001000f }	},
	{	{ 0.772958f, 4.215162f, 0.315658f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.130800f, 0.989200f, 0.065800f }	},
	{	{ 0.981499f, 4.173514f, 0.357965f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.179100f, 0.980900f, 0.075400f }	},
	{	{ 1.052791f, 4.177223f, -0.057296f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.193300f, 0.981100f, 0.001200f }	},
	{	{ 1.093705f, 4.062952f, -0.505339f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.641700f, 0.728300f, -0.240400f }	},
	{	{ 0.981489f, 4.173497f, -0.470053f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.639500f, 0.728400f, -0.245900f }	},
	{	{ 0.859667f, 4.061990f, -0.890569f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.485400f, 0.728400f, -0.483500f }	},
	{	{ 0.770344f, 4.169760f, -0.813969f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.476700f, 0.727800f, -0.492900f }	},
	{	{ 0.981489f, 4.173497f, -0.470053f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.187500f, 0.979300f, -0.076600f }	},
	{	{ 0.772950f, 4.215148f, -0.451126f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.135800f, 0.988200f, -0.070300f }	},
	{	{ 0.770344f, 4.169760f, -0.813969f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.150400f, 0.977000f, -0.150900f }	},
	{	{ 0.657277f, 4.201427f, -0.709629f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.124500f, 0.984000f, -0.127100f }	},
	{	{ 1.093705f, 4.062952f, -0.505339f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.906500f, 0.247300f, -0.342300f }	},
	{	{ 1.314337f, 0.373379f, -1.313964f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.706100f, 0.026900f, -0.707600f }	},
	{	{ 0.906176f, 3.831032f, -0.923804f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.692000f, 0.197200f, -0.694400f }	},
	{	{ 0.859667f, 4.061990f, -0.890569f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.678600f, 0.234500f, -0.696000f }	},
	{	{ 0.470521f, 4.062862f, -1.120741f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.326800f, 0.213300f, -0.920700f }	},
	{	{ 0.495331f, 3.830959f, -1.165760f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.335700f, 0.185100f, -0.923600f }	},
	{	{ 0.002322f, 3.830880f, -1.243532f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.005200f, 0.179500f, -0.983700f }	},
	{	{ 0.003801f, 4.063729f, -1.195570f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.006200f, 0.203500f, -0.979100f }	},
	{	{ -0.000011f, 0.373363f, -1.791116f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.001800f, 0.030100f, -0.999500f }	},
	{	{ -0.716928f, 0.373357f, -1.671293f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.347600f, 0.030200f, -0.937200f }	},
	{	{ -0.490678f, 3.830815f, -1.158246f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.343900f, 0.185700f, -0.920500f }	},
	{	{ 0.716906f, 0.373371f, -1.672044f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.344700f, 0.028200f, -0.938300f }	},
	{	{ 0.005237f, 4.177111f, -1.092197f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.003800f, 0.682700f, -0.730700f }	},
	{	{ 0.422111f, 4.173439f, -1.022707f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.239000f, 0.700000f, -0.673000f }	},
	{	{ 0.470521f, 4.062862f, -1.120741f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.251400f, 0.701700f, -0.666600f }	},
	{	{ 0.003801f, 4.063729f, -1.195570f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.004700f, 0.682700f, -0.730700f }	},
	{	{ 0.006418f, 4.221864f, -0.884022f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000600f, 0.989100f, -0.147300f }	},
	{	{ 0.392729f, 4.215122f, -0.827011f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.069600f, 0.987600f, -0.140800f }	},
	{	{ 0.422111f, 4.173439f, -1.022707f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.078800f, 0.977600f, -0.195000f }	},
	{	{ 0.005237f, 4.177111f, -1.092197f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.001000f, 0.978500f, -0.206300f }	},
	{	{ -0.462961f, 4.062748f, -1.114771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.259200f, 0.700500f, -0.665000f }	},
	{	{ -0.411828f, 4.173355f, -1.018366f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.244800f, 0.698500f, -0.672400f }	},
	{	{ -0.411828f, 4.173355f, -1.018366f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.080700f, 0.977500f, -0.195100f }	},
	{	{ -0.380247f, 4.215066f, -0.824106f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.070700f, 0.987500f, -0.140900f }	},
	{	{ -0.462961f, 4.062748f, -1.114771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.336000f, 0.212200f, -0.917600f }	},
	{	{ 0.000002f, 0.006506f, 0.692815f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.999700f, 0.022600f }	},
	{	{ -0.644362f, 0.012629f, 0.644364f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.024100f, -0.999400f, 0.024100f }	},
	{	{ -0.692813f, 0.006506f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.022600f, -0.999700f, -0.000000f }	},
	{	{ 0.000002f, 0.000001f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.000002f, 0.025927f, 1.269154f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.997800f, 0.065800f }	},
	{	{ -0.595224f, 0.030806f, 1.181148f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.032000f, -0.997500f, 0.063100f }	},
	{	{ -1.181146f, 0.030806f, 0.595226f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.063100f, -0.997500f, 0.032000f }	},
	{	{ -1.269152f, 0.025927f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.065800f, -0.997800f, -0.000000f }	},
	{	{ -1.003067f, 0.040692f, 1.003069f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.057400f, -0.996700f, 0.057400f }	},
	{	{ 0.692817f, 0.006506f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.022600f, -0.999700f, -0.000000f }	},
	{	{ 0.644365f, 0.012629f, 0.644364f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.024100f, -0.999400f, 0.024100f }	},
	{	{ 1.269156f, 0.025927f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.065800f, -0.997800f, -0.000000f }	},
	{	{ 1.181150f, 0.030806f, 0.595227f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.063100f, -0.997500f, 0.032000f }	},
	{	{ 0.595228f, 0.030806f, 1.181148f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.032000f, -0.997500f, 0.063100f }	},
	{	{ 1.003070f, 0.040692f, 1.003069f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.057400f, -0.996700f, 0.057400f }	},
	{	{ 0.000002f, 0.006506f, -0.692815f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.999700f, -0.022600f }	},
	{	{ 0.644365f, 0.012629f, -0.644363f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.024100f, -0.999400f, -0.024100f }	},
	{	{ 0.000002f, 0.025927f, -1.269153f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.997800f, -0.065800f }	},
	{	{ 0.595228f, 0.030806f, -1.181147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.032000f, -0.997500f, -0.063100f }	},
	{	{ 1.181150f, 0.030806f, -0.595226f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.063100f, -0.997500f, -0.032000f }	},
	{	{ 1.003070f, 0.040692f, -1.003068f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.057400f, -0.996700f, -0.057400f }	},
	{	{ -0.644362f, 0.012629f, -0.644363f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.024100f, -0.999400f, -0.024100f }	},
	{	{ -1.181146f, 0.030806f, -0.595226f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.063100f, -0.997500f, -0.032000f }	},
	{	{ -0.595224f, 0.030806f, -1.181147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.032000f, -0.997500f, -0.063100f }	},
	{	{ -1.003067f, 0.040692f, -1.003068f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.057400f, -0.996700f, -0.057400f }	},
	{	{ 0.007145f, 4.248848f, 0.368449f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000100f, 0.998900f, 0.047700f }	},
	{	{ 0.425013f, 4.240363f, 0.339656f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.050400f, 0.997400f, 0.050600f }	},
	{	{ 0.456556f, 4.248848f, -0.077256f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.048300f, 0.998800f, -0.000300f }	},
	{	{ 0.007372f, 4.257860f, -0.079402f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000300f }	},
	{	{ -0.442281f, 4.248823f, -0.075954f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.048300f, 0.998800f, -0.000400f }	},
	{	{ -0.411164f, 4.240346f, 0.340524f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.050100f, 0.997500f, 0.050400f }	},
	{	{ 0.007130f, 4.248823f, -0.521658f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000200f, 0.998800f, -0.049800f }	},
	{	{ -0.411187f, 4.240309f, -0.487066f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.052300f, 0.997200f, -0.053000f }	},
	{	{ 0.425003f, 4.240346f, -0.489003f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.052100f, 0.997200f, -0.053000f }	},
	{	{ 0.707523f, 0.156964f, -1.652114f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.180100f, -0.861600f, -0.474600f }	},
	{	{ 0.641622f, 0.060847f, -1.502773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.115300f, -0.943300f, -0.311200f }	},
	{	{ 0.000002f, 0.058168f, -1.612540f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.942000f, -0.335600f }	},
	{	{ -0.000001f, 0.156292f, -1.770639f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.854000f, -0.520300f }	},
	{	{ 1.297481f, 0.157635f, -1.297386f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.348500f, -0.870100f, -0.348500f }	},
	{	{ 1.177721f, 0.063525f, -1.177719f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.233300f, -0.944000f, -0.233400f }	},
	{	{ 0.707523f, 0.156964f, -1.652114f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.342800f, -0.100800f, -0.934000f }	},
	{	{ -0.000001f, 0.156292f, -1.770639f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000300f, -0.095700f, -0.995400f }	},
	{	{ 1.297481f, 0.157635f, -1.297386f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.702800f, -0.106900f, -0.703300f }	},
	{	{ -0.707526f, 0.156960f, -1.651927f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.343300f, -0.098700f, -0.934000f }	},
	{	{ -1.297483f, 0.157629f, -1.297066f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.702800f, -0.104200f, -0.703700f }	},
	{	{ -0.641619f, 0.060847f, -1.502773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.115400f, -0.943300f, -0.311400f }	},
	{	{ -0.707526f, 0.156960f, -1.651927f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.180300f, -0.861400f, -0.474900f }	},
	{	{ -1.177717f, 0.063525f, -1.177719f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.233500f, -0.943900f, -0.233600f }	},
	{	{ -1.297483f, 0.157629f, -1.297066f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.348800f, -0.869900f, -0.348700f }	},
	{	{ 1.652305f, 0.156967f, 0.707524f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.474200f, -0.861800f, 0.180000f }	},
	{	{ 1.502776f, 0.060847f, 0.641621f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.310900f, -0.943400f, 0.115300f }	},
	{	{ 1.612542f, 0.058168f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.335200f, -0.942200f, -0.000000f }	},
	{	{ 1.770932f, 0.156297f, 0.000010f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.519700f, -0.854400f, 0.000000f }	},
	{	{ 1.297482f, 0.157637f, 1.297480f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.348400f, -0.870200f, 0.348400f }	},
	{	{ 1.177721f, 0.063525f, 1.177719f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.233300f, -0.944000f, 0.233300f }	},
	{	{ 1.652305f, 0.156967f, 0.707524f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.933600f, -0.103300f, 0.343200f }	},
	{	{ 1.770932f, 0.156297f, 0.000010f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.995000f, -0.099600f, -0.000000f }	},
	{	{ 1.297482f, 0.157637f, 1.297480f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703000f, -0.108000f, 0.703000f }	},
	{	{ 1.652304f, 0.156967f, -0.707485f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.933600f, -0.103100f, -0.343300f }	},
	{	{ 1.502776f, 0.060847f, -0.641620f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.311000f, -0.943400f, -0.115300f }	},
	{	{ 1.652304f, 0.156967f, -0.707485f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.474300f, -0.861800f, -0.180000f }	},
	{	{ -0.707522f, 0.156967f, 1.652341f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.179900f, -0.861900f, 0.474200f }	},
	{	{ -0.641619f, 0.060847f, 1.502774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.115300f, -0.943400f, 0.310900f }	},
	{	{ 0.000002f, 0.058168f, 1.612540f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.942200f, 0.335100f }	},
	{	{ 0.000002f, 0.156297f, 1.770941f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.854400f, 0.519700f }	},
	{	{ -1.297479f, 0.157635f, 1.297574f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.348200f, -0.870300f, 0.348300f }	},
	{	{ -1.177717f, 0.063525f, 1.177719f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.233200f, -0.944100f, 0.233200f }	},
	{	{ -0.707522f, 0.156967f, 1.652341f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.343000f, -0.103900f, 0.933600f }	},
	{	{ 0.000002f, 0.156297f, 1.770941f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000100f, -0.099800f, 0.995000f }	},
	{	{ -1.297479f, 0.157635f, 1.297574f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.702900f, -0.108900f, 0.702900f }	},
	{	{ 0.707525f, 0.156967f, 1.652303f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.343200f, -0.103400f, 0.933600f }	},
	{	{ 0.641622f, 0.060847f, 1.502774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.115300f, -0.943400f, 0.310900f }	},
	{	{ 0.707525f, 0.156967f, 1.652303f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.180000f, -0.861800f, 0.474200f }	},
	{	{ -1.652305f, 0.156960f, -0.707147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.474500f, -0.861600f, -0.180000f }	},
	{	{ -1.502772f, 0.060847f, -0.641620f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.311100f, -0.943400f, -0.115400f }	},
	{	{ -1.612538f, 0.058168f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.335200f, -0.942200f, -0.000100f }	},
	{	{ -1.770932f, 0.156292f, 0.000291f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.519700f, -0.854400f, 0.000100f }	},
	{	{ -1.652305f, 0.156960f, -0.707147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.933500f, -0.101600f, -0.343800f }	},
	{	{ -1.770932f, 0.156292f, 0.000291f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.995000f, -0.099600f, -0.000400f }	},
	{	{ -1.652303f, 0.156964f, 0.707711f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.933600f, -0.104100f, 0.343000f }	},
	{	{ -1.502772f, 0.060847f, 0.641621f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.310900f, -0.943400f, 0.115200f }	},
	{	{ -1.652303f, 0.156964f, 0.707711f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.474100f, -0.861900f, 0.180000f }	},
};
#define _RockPlatform_Tall_vertices_
#endif
#ifndef _RockPlatform_Tall_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int RockPlatform_Tall_indices[864] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 1,
	 0, 4, 1,
	 2, 6, 7,
	 8, 2, 7,
	 6, 2, 1,
	 9, 6, 1,
	 10, 11, 12,
	 13, 10, 12,
	 14, 15, 16,
	 17, 14, 16,
	 11, 18, 19,
	 12, 11, 19,
	 15, 20, 21,
	 16, 15, 21,
	 22, 23, 10,
	 13, 22, 10,
	 24, 25, 23,
	 22, 24, 23,
	 26, 27, 14,
	 17, 26, 14,
	 28, 29, 27,
	 26, 28, 27,
	 2, 8, 30,
	 3, 2, 30,
	 8, 7, 31,
	 32, 8, 31,
	 8, 32, 33,
	 30, 8, 33,
	 34, 35, 36,
	 37, 34, 36,
	 33, 32, 35,
	 34, 33, 35,
	 36, 38, 39,
	 40, 36, 39,
	 38, 36, 35,
	 41, 38, 35,
	 42, 43, 44,
	 45, 42, 44,
	 46, 47, 48,
	 49, 46, 48,
	 43, 25, 24,
	 44, 43, 24,
	 29, 28, 48,
	 47, 29, 48,
	 50, 51, 42,
	 45, 50, 42,
	 52, 53, 51,
	 50, 52, 51,
	 54, 55, 46,
	 49, 54, 46,
	 56, 57, 55,
	 54, 56, 55,
	 36, 40, 58,
	 37, 36, 58,
	 40, 39, 59,
	 60, 40, 59,
	 40, 60, 61,
	 58, 40, 61,
	 1, 5, 62,
	 9, 1, 62,
	 63, 64, 65,
	 66, 63, 65,
	 61, 60, 64,
	 63, 61, 64,
	 65, 67, 68,
	 69, 65, 68,
	 67, 65, 64,
	 70, 67, 64,
	 71, 72, 73,
	 74, 71, 73,
	 75, 76, 77,
	 78, 75, 77,
	 72, 53, 52,
	 73, 72, 52,
	 76, 57, 56,
	 77, 76, 56,
	 79, 80, 71,
	 74, 79, 71,
	 81, 82, 80,
	 79, 81, 80,
	 83, 84, 75,
	 78, 83, 75,
	 85, 86, 84,
	 83, 85, 84,
	 65, 69, 87,
	 66, 65, 87,
	 69, 68, 88,
	 89, 69, 88,
	 69, 89, 90,
	 87, 69, 90,
	 31, 41, 35,
	 32, 31, 35,
	 91, 92, 93,
	 94, 91, 93,
	 90, 89, 92,
	 91, 90, 92,
	 93, 95, 96,
	 97, 93, 96,
	 95, 93, 92,
	 98, 95, 92,
	 99, 100, 101,
	 102, 99, 101,
	 103, 104, 105,
	 106, 103, 105,
	 100, 82, 81,
	 101, 100, 81,
	 104, 86, 85,
	 105, 104, 85,
	 107, 108, 99,
	 102, 107, 99,
	 19, 18, 108,
	 107, 19, 108,
	 109, 110, 103,
	 106, 109, 103,
	 21, 20, 110,
	 109, 21, 110,
	 93, 97, 111,
	 94, 93, 111,
	 5, 97, 96,
	 62, 5, 96,
	 97, 5, 4,
	 111, 97, 4,
	 59, 70, 64,
	 60, 59, 64,
	 112, 113, 114,
	 115, 112, 114,
	 116, 117, 113,
	 112, 116, 113,
	 113, 118, 119,
	 114, 113, 119,
	 117, 120, 118,
	 113, 117, 118,
	 121, 122, 112,
	 115, 121, 112,
	 123, 124, 122,
	 121, 123, 122,
	 122, 125, 116,
	 112, 122, 116,
	 124, 126, 125,
	 122, 124, 125,
	 127, 128, 121,
	 115, 127, 121,
	 129, 130, 128,
	 127, 129, 128,
	 128, 131, 123,
	 121, 128, 123,
	 130, 132, 131,
	 128, 130, 131,
	 114, 133, 127,
	 115, 114, 127,
	 119, 134, 133,
	 114, 119, 133,
	 133, 135, 129,
	 127, 133, 129,
	 134, 136, 135,
	 133, 134, 135,
	 137, 138, 139,
	 140, 137, 139,
	 46, 55, 138,
	 137, 46, 138,
	 138, 76, 75,
	 139, 138, 75,
	 55, 57, 76,
	 138, 55, 76,
	 141, 142, 137,
	 140, 141, 137,
	 14, 27, 142,
	 141, 14, 142,
	 142, 47, 46,
	 137, 142, 46,
	 27, 29, 47,
	 142, 27, 47,
	 143, 144, 141,
	 140, 143, 141,
	 103, 110, 144,
	 143, 103, 144,
	 144, 15, 14,
	 141, 144, 14,
	 110, 20, 15,
	 144, 110, 15,
	 139, 145, 143,
	 140, 139, 143,
	 75, 84, 145,
	 139, 75, 145,
	 145, 104, 103,
	 143, 145, 103,
	 84, 86, 104,
	 145, 84, 104,
	 146, 147, 148,
	 149, 146, 148,
	 150, 151, 147,
	 146, 150, 147,
	 147, 130, 129,
	 148, 147, 129,
	 151, 132, 130,
	 147, 151, 130,
	 95, 98, 152,
	 153, 95, 152,
	 98, 88, 154,
	 152, 98, 154,
	 155, 96, 95,
	 153, 155, 95,
	 156, 62, 96,
	 155, 156, 96,
	 148, 157, 158,
	 149, 148, 158,
	 129, 135, 157,
	 148, 129, 157,
	 157, 159, 160,
	 158, 157, 160,
	 135, 136, 159,
	 157, 135, 159,
	 161, 162, 163,
	 164, 161, 163,
	 165, 166, 162,
	 161, 165, 162,
	 162, 124, 123,
	 163, 162, 123,
	 166, 126, 124,
	 162, 166, 124,
	 67, 70, 167,
	 168, 67, 167,
	 70, 59, 169,
	 167, 70, 169,
	 170, 68, 67,
	 168, 170, 67,
	 154, 88, 68,
	 170, 154, 68,
	 163, 171, 172,
	 164, 163, 172,
	 123, 131, 171,
	 163, 123, 171,
	 171, 151, 150,
	 172, 171, 150,
	 131, 132, 151,
	 171, 131, 151,
	 173, 174, 175,
	 176, 173, 175,
	 177, 178, 174,
	 173, 177, 174,
	 174, 117, 116,
	 175, 174, 116,
	 178, 120, 117,
	 174, 178, 117,
	 38, 41, 179,
	 180, 38, 179,
	 41, 31, 181,
	 179, 41, 181,
	 182, 39, 38,
	 180, 182, 38,
	 169, 59, 39,
	 182, 169, 39,
	 175, 183, 184,
	 176, 175, 184,
	 116, 125, 183,
	 175, 116, 183,
	 183, 166, 165,
	 184, 183, 165,
	 125, 126, 166,
	 183, 125, 166,
	 185, 186, 187,
	 188, 185, 187,
	 160, 159, 186,
	 185, 160, 186,
	 186, 134, 119,
	 187, 186, 119,
	 159, 136, 134,
	 186, 159, 134,
	 6, 9, 189,
	 190, 6, 189,
	 9, 62, 156,
	 189, 9, 156,
	 191, 7, 6,
	 190, 191, 6,
	 181, 31, 7,
	 191, 181, 7,
	 88, 98, 92,
	 89, 88, 92,
	 187, 192, 193,
	 188, 187, 193,
	 119, 118, 192,
	 187, 119, 192,
	 192, 178, 177,
	 193, 192, 177,
	 118, 120, 178,
	 192, 118, 178,
};
#define _RockPlatform_Tall_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _RockPlatform_Tall_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL RockPlatform_Tall_materials[1] =
{
	{
		{{ 0.307496f, 0.166068f, 0.086368f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Rock",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _RockPlatform_Tall_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _RockPlatform_Tall_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int RockPlatform_Tall_batches[1][2] =
{
	{ 864, 0 },
};
#define _RockPlatform_Tall_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _RockPlatform_Tall_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH RockPlatform_Tall_meshes[1] =
{
	{
		"default",
		864,
		0,
		0,
	},
};
#define _RockPlatform_Tall_meshes_
#endif
