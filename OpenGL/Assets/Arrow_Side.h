// "Arrow_Side.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Arrow_Side.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Arrow_Side_version_
const char Arrow_Side_version[4] = { '0','1','9','d' };
#define _Arrow_Side_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Arrow_Side_vertexcount_
const unsigned Arrow_Side_vertexcount = 168;
#define _Arrow_Side_vertexcount_
#endif
#ifndef _Arrow_Side_indexcount_
const unsigned Arrow_Side_indexcount = 360;
#define _Arrow_Side_indexcount_
#endif
#ifndef _Arrow_Side_materialcount_
const unsigned Arrow_Side_materialcount = 2; // can be used for batched draws
#define _Arrow_Side_materialcount_
#endif
#ifndef _Arrow_Side_meshcount_
const unsigned Arrow_Side_meshcount = 2;
#define _Arrow_Side_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Arrow_Side_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Arrow_Side_vertices[168] =
{
	{	{ -0.758708f, 1.355564f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.719648f, 1.282090f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.457753f, 1.224874f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.465984f, 1.394261f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.474216f, 1.563648f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.704050f, 1.716134f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.677619f, 1.755976f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.514179f, 1.698061f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.758708f, 1.355564f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.975900f, -0.218300f, -0.000000f }	},
	{	{ -0.719648f, 1.282090f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.883000f, -0.469400f, -0.000000f }	},
	{	{ -0.719648f, 1.282090f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.883000f, -0.469400f, -0.000000f }	},
	{	{ -0.758708f, 1.355564f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.975900f, -0.218300f, -0.000000f }	},
	{	{ -0.694954f, 1.790250f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.833300f, 0.552800f, -0.000000f }	},
	{	{ -0.740953f, 1.720910f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.950100f, 0.311900f, -0.000000f }	},
	{	{ -0.740953f, 1.720910f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.950100f, 0.311900f, -0.000000f }	},
	{	{ -0.694954f, 1.790250f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.833300f, 0.552800f, -0.000000f }	},
	{	{ 0.445401f, 0.970697f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 1.100919f, 1.442722f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.492727f, 1.256606f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.699072f, 1.314522f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.721515f, 1.356739f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.465984f, 1.394261f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 1.100919f, 1.442722f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.998800f, -0.048500f, -0.000000f }	},
	{	{ 1.101100f, 1.446431f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.998800f, -0.048500f, -0.000000f }	},
	{	{ 1.101100f, 1.446431f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.998800f, -0.048500f, -0.000000f }	},
	{	{ 1.100919f, 1.442722f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.998800f, -0.048500f, -0.000000f }	},
	{	{ 0.993022f, 1.406176f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.106400f, -0.005200f, -0.994300f }	},
	{	{ 0.482117f, 1.038284f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 1.101280f, 1.450141f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 1.101460f, 1.453851f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.482447f, 1.733034f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.474216f, 1.563648f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.994553f, 1.437679f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.151800f, -0.007400f, -0.988400f }	},
	{	{ 1.101280f, 1.450141f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.998800f, -0.048500f, -0.000000f }	},
	{	{ 1.101460f, 1.453851f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.998800f, -0.048500f, -0.000000f }	},
	{	{ 1.101460f, 1.453851f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.998800f, -0.048500f, -0.000000f }	},
	{	{ 1.101280f, 1.450141f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.998800f, -0.048500f, -0.000000f }	},
	{	{ 0.494799f, 1.987211f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 1.101460f, 1.453851f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.660300f, 0.751000f, -0.000000f }	},
	{	{ 1.101460f, 1.453851f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.660300f, 0.751000f, -0.000000f }	},
	{	{ 0.494799f, 1.987211f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.660300f, 0.751000f, -0.000000f }	},
	{	{ 0.494799f, 1.987211f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.660300f, 0.751000f, -0.000000f }	},
	{	{ 0.445401f, 0.970697f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.998800f, 0.048500f, -0.000000f }	},
	{	{ 0.445401f, 0.970697f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.998800f, 0.048500f, -0.000000f }	},
	{	{ 0.457753f, 1.224874f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.998800f, 0.048500f, -0.000000f }	},
	{	{ 0.457753f, 1.224874f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.998800f, 0.048500f, -0.000000f }	},
	{	{ 0.997615f, 1.500686f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.106400f, -0.005200f, -0.994300f }	},
	{	{ 0.996084f, 1.469183f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.151800f, -0.007400f, -0.988400f }	},
	{	{ 1.101100f, 1.446431f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.524789f, 1.916383f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 1.100919f, 1.442722f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.584300f, -0.811500f, -0.000000f }	},
	{	{ 1.100919f, 1.442722f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.584300f, -0.811500f, -0.000000f }	},
	{	{ 0.445401f, 0.970697f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.584300f, -0.811500f, -0.000000f }	},
	{	{ 0.445401f, 0.970697f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.584300f, -0.811500f, -0.000000f }	},
	{	{ 0.494799f, 1.987211f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.998800f, 0.048500f, -0.000000f }	},
	{	{ 0.494799f, 1.987211f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.998800f, 0.048500f, -0.000000f }	},
	{	{ 0.482447f, 1.733034f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.998800f, 0.048500f, -0.000000f }	},
	{	{ 0.482447f, 1.733034f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.998800f, 0.048500f, -0.000000f }	},
	{	{ 0.482447f, 1.733034f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.048500f, 0.998800f, -0.000000f }	},
	{	{ -0.694954f, 1.790250f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.048500f, 0.998800f, -0.000000f }	},
	{	{ -0.694954f, 1.790250f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.048500f, 0.998800f, -0.000000f }	},
	{	{ 0.482447f, 1.733034f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.048500f, 0.998800f, -0.000000f }	},
	{	{ -0.694954f, 1.790250f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.740953f, 1.720910f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.740953f, 1.720910f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.643600f, 0.197100f, -0.739500f }	},
	{	{ -0.694954f, 1.790250f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.589200f, 0.390900f, -0.707100f }	},
	{	{ -0.677619f, 1.755976f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.589200f, 0.390900f, -0.707100f }	},
	{	{ -0.704050f, 1.716134f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.636500f, 0.229500f, -0.736300f }	},
	{	{ -0.694954f, 1.790250f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.034300f, 0.706300f, -0.707100f }	},
	{	{ 0.482447f, 1.733034f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.034300f, 0.706300f, -0.707100f }	},
	{	{ 0.514179f, 1.698061f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.034300f, 0.706300f, -0.707100f }	},
	{	{ -0.677619f, 1.755976f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.034300f, 0.706300f, -0.707100f }	},
	{	{ 0.457753f, 1.224874f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.034300f, -0.706300f, -0.707100f }	},
	{	{ -0.719648f, 1.282090f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.034300f, -0.706300f, -0.707100f }	},
	{	{ -0.699072f, 1.314522f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.034300f, -0.706300f, -0.707100f }	},
	{	{ 0.492727f, 1.256606f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.034300f, -0.706300f, -0.707100f }	},
	{	{ 1.101100f, 1.446431f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.300100f, -0.014600f, -0.953800f }	},
	{	{ 1.100919f, 1.442722f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.300100f, -0.014600f, -0.953800f }	},
	{	{ 0.524789f, 1.916383f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.706300f, 0.034300f, -0.707100f }	},
	{	{ 0.514179f, 1.698061f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.706300f, 0.034300f, -0.707100f }	},
	{	{ 0.482447f, 1.733034f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.706300f, 0.034300f, -0.707100f }	},
	{	{ 0.494799f, 1.987211f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.706300f, 0.034300f, -0.707100f }	},
	{	{ 1.100919f, 1.442722f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.413200f, -0.573800f, -0.707100f }	},
	{	{ 0.445401f, 0.970697f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.413200f, -0.573800f, -0.707100f }	},
	{	{ 0.482117f, 1.038284f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.413200f, -0.573800f, -0.707100f }	},
	{	{ 0.993022f, 1.406176f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.413200f, -0.573800f, -0.707100f }	},
	{	{ 0.445401f, 0.970697f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.706300f, 0.034300f, -0.707100f }	},
	{	{ 0.457753f, 1.224874f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.706300f, 0.034300f, -0.707100f }	},
	{	{ 0.492727f, 1.256606f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.706300f, 0.034300f, -0.707100f }	},
	{	{ 0.482117f, 1.038284f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.706300f, 0.034300f, -0.707100f }	},
	{	{ 0.997615f, 1.500686f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.466900f, 0.531100f, -0.707100f }	},
	{	{ 0.524789f, 1.916383f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.466900f, 0.531100f, -0.707100f }	},
	{	{ 0.494799f, 1.987211f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.466900f, 0.531100f, -0.707100f }	},
	{	{ 1.101460f, 1.453851f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.466900f, 0.531100f, -0.707100f }	},
	{	{ -0.719648f, 1.282090f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.624400f, -0.331900f, -0.707100f }	},
	{	{ -0.758708f, 1.355564f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.659700f, -0.133800f, -0.739500f }	},
	{	{ -0.721515f, 1.356739f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.655800f, -0.166700f, -0.736300f }	},
	{	{ -0.699072f, 1.314522f, -0.252539f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.624400f, -0.331900f, -0.707100f }	},
	{	{ 1.101460f, 1.453851f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.300100f, -0.014600f, -0.953800f }	},
	{	{ 1.101280f, 1.450141f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.300100f, -0.014600f, -0.953800f }	},
	{	{ -0.719648f, 1.282090f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.048500f, -0.998800f, -0.000000f }	},
	{	{ 0.457753f, 1.224874f, -0.219147f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.048500f, -0.998800f, -0.000000f }	},
	{	{ 0.457753f, 1.224874f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.048500f, -0.998800f, -0.000000f }	},
	{	{ -0.719648f, 1.282090f, -0.105260f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.048500f, -0.998800f, -0.000000f }	},
	{	{ -0.084622f, 2.031625f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.262300f, 0.800800f, 0.538500f }	},
	{	{ 0.084622f, 2.031625f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.262300f, 0.800800f, 0.538500f }	},
	{	{ 0.063882f, 2.052365f, 0.089943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.176500f, 0.778700f, 0.602100f }	},
	{	{ -0.063882f, 2.052365f, 0.089943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.176500f, 0.778600f, 0.602100f }	},
	{	{ 0.084622f, 2.031625f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.262300f, 0.800800f, -0.538500f }	},
	{	{ -0.084622f, 2.031625f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.262300f, 0.800800f, -0.538500f }	},
	{	{ -0.063882f, 2.052365f, -0.089943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.176500f, 0.778600f, -0.602100f }	},
	{	{ 0.063882f, 2.052365f, -0.089943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.176500f, 0.778600f, -0.602100f }	},
	{	{ 0.084622f, -0.000000f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.084622f, 2.031625f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.084622f, 2.031625f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.084622f, -0.000000f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.084622f, -0.000000f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.084622f, 2.031625f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.084622f, 2.031625f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.084622f, -0.000000f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.110683f, -0.000000f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.110683f, 2.031625f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.110683f, 2.031625f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.110683f, -0.000000f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.089943f, 2.052365f, -0.063882f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.063882f, 2.052365f, -0.089943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.063882f, 2.052365f, -0.089943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.089943f, 2.052365f, 0.063882f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.063882f, 2.052365f, 0.089943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.063882f, 2.052365f, 0.089943f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.089943f, 2.052365f, 0.063882f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.089943f, 2.052365f, -0.063882f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.110683f, 2.031625f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.538500f, 0.800800f, 0.262300f }	},
	{	{ 0.110683f, 2.031625f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.538500f, 0.800800f, -0.262300f }	},
	{	{ 0.089943f, 2.052365f, -0.063882f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.602100f, 0.778600f, -0.176500f }	},
	{	{ 0.089943f, 2.052365f, 0.063882f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.602100f, 0.778600f, 0.176500f }	},
	{	{ -0.110683f, 2.031625f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.538500f, 0.800800f, -0.262300f }	},
	{	{ -0.110683f, 2.031625f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.538500f, 0.800800f, 0.262300f }	},
	{	{ -0.089943f, 2.052365f, 0.063882f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.602100f, 0.778600f, 0.176500f }	},
	{	{ -0.089943f, 2.052365f, -0.063882f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.602100f, 0.778600f, -0.176500f }	},
	{	{ -0.110683f, -0.000000f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.110683f, 2.031625f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.110683f, 2.031625f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.110683f, -0.000000f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.084622f, -0.000000f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.707100f, 0.000000f, -0.707100f }	},
	{	{ 0.084622f, 2.031625f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.707100f, 0.000000f, -0.707100f }	},
	{	{ 0.110683f, 2.031625f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.707100f, 0.000000f, -0.707100f }	},
	{	{ 0.110683f, -0.000000f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.707100f, 0.000000f, -0.707100f }	},
	{	{ -0.084622f, 2.031625f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.707100f, 0.000000f, -0.707100f }	},
	{	{ -0.084622f, -0.000000f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.707100f, 0.000000f, -0.707100f }	},
	{	{ -0.110683f, -0.000000f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.707100f, 0.000000f, -0.707100f }	},
	{	{ -0.110683f, 2.031625f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.707100f, 0.000000f, -0.707100f }	},
	{	{ -0.110683f, 2.031625f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.707100f, 0.000000f, 0.707100f }	},
	{	{ -0.110683f, -0.000000f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.707100f, 0.000000f, 0.707100f }	},
	{	{ -0.084622f, -0.000000f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.707100f, 0.000000f, 0.707100f }	},
	{	{ -0.084622f, 2.031625f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.707100f, 0.000000f, 0.707100f }	},
	{	{ 0.084622f, 2.031625f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.707100f, 0.000000f, 0.707100f }	},
	{	{ 0.084622f, -0.000000f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.707100f, 0.000000f, 0.707100f }	},
	{	{ 0.110683f, -0.000000f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.707100f, 0.000000f, 0.707100f }	},
	{	{ 0.110683f, 2.031625f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.707100f, 0.000000f, 0.707100f }	},
	{	{ -0.110683f, -0.000000f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.084622f, -0.000000f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.084622f, -0.000000f, -0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.110683f, -0.000000f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.084622f, -0.000000f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.084622f, -0.000000f, 0.110683f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.110683f, -0.000000f, 0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.110683f, -0.000000f, -0.084622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
};
#define _Arrow_Side_vertices_
#endif
#ifndef _Arrow_Side_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Arrow_Side_indices[360] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 6,
	 7, 4, 6,
	 8, 9, 10,
	 11, 8, 10,
	 12, 13, 14,
	 15, 12, 14,
	 2, 16, 17,
	 18, 19, 20,
	 21, 18, 20,
	 22, 23, 24,
	 25, 22, 24,
	 26, 27, 18,
	 28, 29, 30,
	 31, 28, 30,
	 32, 26, 18,
	 21, 32, 18,
	 21, 20, 5,
	 4, 21, 5,
	 33, 34, 35,
	 36, 33, 35,
	 29, 37, 30,
	 38, 39, 40,
	 41, 38, 40,
	 42, 43, 44,
	 45, 42, 44,
	 46, 47, 4,
	 7, 46, 4,
	 17, 48, 3,
	 2, 17, 3,
	 48, 28, 31,
	 3, 48, 31,
	 7, 49, 46,
	 50, 51, 52,
	 53, 50, 52,
	 47, 32, 21,
	 4, 47, 21,
	 54, 55, 56,
	 57, 54, 56,
	 23, 33, 36,
	 24, 23, 36,
	 58, 59, 60,
	 61, 58, 60,
	 13, 8, 11,
	 14, 13, 11,
	 62, 63, 31,
	 30, 62, 31,
	 63, 0, 3,
	 31, 63, 3,
	 64, 65, 66,
	 67, 64, 66,
	 68, 69, 70,
	 71, 68, 70,
	 72, 73, 74,
	 75, 72, 74,
	 76, 77, 26,
	 32, 76, 26,
	 78, 79, 80,
	 81, 78, 80,
	 82, 83, 84,
	 85, 82, 84,
	 86, 87, 88,
	 89, 86, 88,
	 90, 91, 92,
	 93, 90, 92,
	 94, 95, 96,
	 97, 94, 96,
	 95, 64, 67,
	 96, 95, 67,
	 98, 99, 47,
	 46, 98, 47,
	 99, 76, 32,
	 47, 99, 32,
	 100, 101, 102,
	 103, 100, 102,
	 104, 105, 106,
	 107, 104, 106,
	 108, 109, 110,
	 111, 108, 110,
	 112, 113, 114,
	 115, 112, 114,
	 116, 117, 118,
	 119, 116, 118,
	 120, 121, 122,
	 123, 120, 122,
	 124, 125, 126,
	 127, 124, 126,
	 128, 127, 126,
	 129, 128, 126,
	 130, 129, 126,
	 131, 130, 126,
	 132, 133, 134,
	 135, 132, 134,
	 136, 137, 138,
	 139, 136, 138,
	 140, 141, 142,
	 143, 140, 142,
	 136, 139, 110,
	 109, 136, 110,
	 138, 137, 104,
	 107, 138, 104,
	 106, 105, 132,
	 135, 106, 132,
	 134, 133, 108,
	 111, 134, 108,
	 144, 145, 146,
	 147, 144, 146,
	 148, 149, 150,
	 151, 148, 150,
	 152, 153, 154,
	 155, 152, 154,
	 156, 157, 158,
	 159, 156, 158,
	 160, 161, 162,
	 163, 160, 162,
	 164, 163, 162,
	 165, 164, 162,
	 166, 165, 162,
	 167, 166, 162,
};
#define _Arrow_Side_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Arrow_Side_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Arrow_Side_materials[2] =
{
	{
		{{ 0.219062f, 0.041810f, 0.039528f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Main_Dark",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
	{
		{{ 0.300596f, 0.162337f, 0.046968f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Wood",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Arrow_Side_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Arrow_Side_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Arrow_Side_batches[2][2] =
{
	{ 228, 0 },
	{ 132, 228 },
};
#define _Arrow_Side_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Arrow_Side_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Arrow_Side_meshes[2] =
{
	{
		"default",
		228,
		0,
		0,
	},
	{
		"default",
		132,
		228,
		1,
	},
};
#define _Arrow_Side_meshes_
#endif
