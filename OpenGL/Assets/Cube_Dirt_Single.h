// "Cube_Dirt_Single.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Cube_Dirt_Single.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Cube_Dirt_Single_version_
const char Cube_Dirt_Single_version[4] = { '0','1','9','d' };
#define _Cube_Dirt_Single_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Cube_Dirt_Single_vertexcount_
const unsigned Cube_Dirt_Single_vertexcount = 230;
#define _Cube_Dirt_Single_vertexcount_
#endif
#ifndef _Cube_Dirt_Single_indexcount_
const unsigned Cube_Dirt_Single_indexcount = 960;
#define _Cube_Dirt_Single_indexcount_
#endif
#ifndef _Cube_Dirt_Single_materialcount_
const unsigned Cube_Dirt_Single_materialcount = 3; // can be used for batched draws
#define _Cube_Dirt_Single_materialcount_
#endif
#ifndef _Cube_Dirt_Single_meshcount_
const unsigned Cube_Dirt_Single_meshcount = 3;
#define _Cube_Dirt_Single_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Cube_Dirt_Single_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Cube_Dirt_Single_vertices[230] =
{
	{	{ -0.873585f, -1.000000f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, -0.980800f, -0.000000f }	},
	{	{ -0.873585f, -1.000000f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.179400f, -0.967300f, -0.179400f }	},
	{	{ 0.000000f, -1.000000f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.980800f, -0.195100f }	},
	{	{ 0.000000f, -1.000000f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.962974f, -0.873585f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.919400f, -0.158500f, -0.360000f }	},
	{	{ -0.946571f, -0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.888100f, -0.325100f, -0.325100f }	},
	{	{ -0.962974f, -0.962974f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.919400f, -0.360000f, -0.158500f }	},
	{	{ -1.000000f, -0.873585f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.967300f, -0.179400f, -0.179400f }	},
	{	{ -0.962974f, -0.962974f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.360000f, -0.919400f, -0.158500f }	},
	{	{ -0.946571f, -0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.325100f, -0.888100f, -0.325100f }	},
	{	{ -0.873585f, -0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.158500f, -0.919400f, -0.360000f }	},
	{	{ -0.873585f, -0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.158500f, -0.360000f, -0.919400f }	},
	{	{ -0.946571f, -0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.325100f, -0.325100f, -0.888100f }	},
	{	{ -0.962974f, -0.873585f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.360000f, -0.158500f, -0.919400f }	},
	{	{ -0.873585f, -0.873585f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.179400f, -0.179400f, -0.967300f }	},
	{	{ 0.000000f, -0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.382700f, -0.923900f }	},
	{	{ 0.000000f, -0.873585f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.195100f, -0.980800f }	},
	{	{ 0.000000f, -0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.923900f, -0.382700f }	},
	{	{ -0.962974f, 0.000000f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, 0.000000f, -0.923900f }	},
	{	{ -0.873585f, 0.000000f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, 0.000000f, -0.980800f }	},
	{	{ -0.873585f, -0.327668f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, 0.000000f, -0.980800f }	},
	{	{ -0.962974f, -0.327668f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, 0.000000f, -0.923900f }	},
	{	{ -0.962974f, 0.000000f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, 0.000000f, -0.382700f }	},
	{	{ -0.962974f, -0.327668f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, 0.000000f, -0.382700f }	},
	{	{ -1.000000f, -0.327668f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, 0.000000f, -0.195100f }	},
	{	{ -1.000000f, 0.000000f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, 0.000000f, -0.195100f }	},
	{	{ -1.000000f, -0.327668f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -1.000000f, 0.000000f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.000000f, 0.000000f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.000000f, -0.327668f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.962974f, -0.962974f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, -0.923900f, -0.000000f }	},
	{	{ -0.962974f, -0.962974f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, -0.382700f, -0.000000f }	},
	{	{ -1.000000f, -0.873585f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, -0.195100f, -0.000000f }	},
	{	{ 0.873585f, -1.000000f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.179400f, -0.967300f, -0.179400f }	},
	{	{ 0.873585f, -1.000000f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, -0.980800f, -0.000000f }	},
	{	{ 0.962974f, -0.962974f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.919400f, -0.360000f, -0.158500f }	},
	{	{ 0.946571f, -0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.888100f, -0.325100f, -0.325100f }	},
	{	{ 0.962974f, -0.873585f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.919400f, -0.158500f, -0.360000f }	},
	{	{ 1.000000f, -0.873585f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.967300f, -0.179400f, -0.179400f }	},
	{	{ 0.873585f, -0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.158500f, -0.919400f, -0.360000f }	},
	{	{ 0.946571f, -0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325100f, -0.888100f, -0.325100f }	},
	{	{ 0.962974f, -0.962974f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.360000f, -0.919400f, -0.158500f }	},
	{	{ 0.962974f, -0.873585f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.360000f, -0.158500f, -0.919400f }	},
	{	{ 0.946571f, -0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325100f, -0.325100f, -0.888100f }	},
	{	{ 0.873585f, -0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.158500f, -0.360000f, -0.919400f }	},
	{	{ 0.873585f, -0.873585f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.179400f, -0.179400f, -0.967300f }	},
	{	{ 0.873585f, -0.327668f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, 0.000000f, -0.980800f }	},
	{	{ 0.873585f, 0.000000f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, 0.000000f, -0.980800f }	},
	{	{ 0.962974f, 0.000000f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, 0.000000f, -0.923900f }	},
	{	{ 0.962974f, -0.327668f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, 0.000000f, -0.923900f }	},
	{	{ 1.000000f, -0.327668f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, 0.000000f, -0.195100f }	},
	{	{ 0.962974f, -0.327668f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, 0.000000f, -0.382700f }	},
	{	{ 0.962974f, 0.000000f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, 0.000000f, -0.382700f }	},
	{	{ 1.000000f, 0.000000f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, 0.000000f, -0.195100f }	},
	{	{ 1.000000f, -0.327668f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 1.000000f, 0.000000f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.962974f, -0.962974f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, -0.923900f, -0.000000f }	},
	{	{ 1.000000f, -0.873585f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, -0.195100f, -0.000000f }	},
	{	{ 0.962974f, -0.962974f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, -0.382700f, -0.000000f }	},
	{	{ 0.000000f, -1.000000f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.980800f, 0.195100f }	},
	{	{ -0.873585f, -1.000000f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.179400f, -0.967300f, 0.179400f }	},
	{	{ -0.962974f, -0.962974f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.919400f, -0.360000f, 0.158500f }	},
	{	{ -0.946571f, -0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.888100f, -0.325100f, 0.325100f }	},
	{	{ -0.962974f, -0.873585f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.919400f, -0.158500f, 0.360000f }	},
	{	{ -1.000000f, -0.873585f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.967300f, -0.179400f, 0.179400f }	},
	{	{ -0.873585f, -0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.158500f, -0.919400f, 0.360000f }	},
	{	{ -0.946571f, -0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.325100f, -0.888100f, 0.325100f }	},
	{	{ -0.962974f, -0.962974f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.360000f, -0.919400f, 0.158500f }	},
	{	{ -0.962974f, -0.873585f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.360000f, -0.158500f, 0.919400f }	},
	{	{ -0.946571f, -0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.325100f, -0.325100f, 0.888100f }	},
	{	{ -0.873585f, -0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.158500f, -0.360000f, 0.919400f }	},
	{	{ -0.873585f, -0.873585f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.179400f, -0.179400f, 0.967300f }	},
	{	{ 0.000000f, -0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.382700f, 0.923900f }	},
	{	{ 0.000000f, -0.873585f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.195100f, 0.980800f }	},
	{	{ 0.000000f, -0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.923900f, 0.382700f }	},
	{	{ -0.873585f, -0.327668f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, 0.000000f, 0.980800f }	},
	{	{ -0.873585f, 0.000000f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, 0.000000f, 0.980800f }	},
	{	{ -0.962974f, 0.000000f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, 0.000000f, 0.923900f }	},
	{	{ -0.962974f, -0.327668f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, 0.000000f, 0.923900f }	},
	{	{ -1.000000f, -0.327668f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, 0.000000f, 0.195100f }	},
	{	{ -0.962974f, -0.327668f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, 0.000000f, 0.382700f }	},
	{	{ -0.962974f, 0.000000f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, 0.000000f, 0.382700f }	},
	{	{ -1.000000f, 0.000000f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, 0.000000f, 0.195100f }	},
	{	{ 0.000000f, -0.327668f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.000000f, 0.000000f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.873585f, -1.000000f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.179400f, -0.967300f, 0.179400f }	},
	{	{ 0.962974f, -0.873585f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.919400f, -0.158500f, 0.360000f }	},
	{	{ 0.946571f, -0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.888100f, -0.325100f, 0.325100f }	},
	{	{ 0.962974f, -0.962974f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.919400f, -0.360000f, 0.158500f }	},
	{	{ 1.000000f, -0.873585f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.967300f, -0.179400f, 0.179400f }	},
	{	{ 0.962974f, -0.962974f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.360000f, -0.919400f, 0.158500f }	},
	{	{ 0.946571f, -0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325100f, -0.888100f, 0.325100f }	},
	{	{ 0.873585f, -0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.158500f, -0.919400f, 0.360000f }	},
	{	{ 0.873585f, -0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.158500f, -0.360000f, 0.919400f }	},
	{	{ 0.946571f, -0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325100f, -0.325100f, 0.888100f }	},
	{	{ 0.962974f, -0.873585f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.360000f, -0.158500f, 0.919400f }	},
	{	{ 0.873585f, -0.873585f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.179400f, -0.179400f, 0.967300f }	},
	{	{ 0.962974f, 0.000000f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, 0.000000f, 0.923900f }	},
	{	{ 0.873585f, 0.000000f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, 0.000000f, 0.980800f }	},
	{	{ 0.873585f, -0.327668f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, 0.000000f, 0.980800f }	},
	{	{ 0.962974f, -0.327668f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, 0.000000f, 0.923900f }	},
	{	{ 0.962974f, 0.000000f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, 0.000000f, 0.382700f }	},
	{	{ 0.962974f, -0.327668f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, 0.000000f, 0.382700f }	},
	{	{ 1.000000f, -0.327668f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, 0.000000f, 0.195100f }	},
	{	{ 1.000000f, 0.000000f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, 0.000000f, 0.195100f }	},
	{	{ 0.000000f, 1.000000f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.980800f, -0.195100f }	},
	{	{ -0.873585f, 1.000000f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.179400f, 0.967300f, -0.179400f }	},
	{	{ -0.873585f, 1.000000f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, 0.980800f, -0.000000f }	},
	{	{ 0.000000f, 1.000000f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.962974f, 0.962974f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.919400f, 0.360000f, -0.158500f }	},
	{	{ -0.946571f, 0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.888100f, 0.325100f, -0.325100f }	},
	{	{ -0.962974f, 0.873585f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.919400f, 0.158500f, -0.360000f }	},
	{	{ -1.000000f, 0.873585f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.967300f, 0.179400f, -0.179400f }	},
	{	{ -0.873585f, 0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.158500f, 0.919400f, -0.360000f }	},
	{	{ -0.946571f, 0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.325100f, 0.888100f, -0.325100f }	},
	{	{ -0.962974f, 0.962974f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.360000f, 0.919400f, -0.158500f }	},
	{	{ -0.962974f, 0.873585f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.360000f, 0.158500f, -0.919400f }	},
	{	{ -0.946571f, 0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.325100f, 0.325100f, -0.888100f }	},
	{	{ -0.873585f, 0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.158500f, 0.360000f, -0.919400f }	},
	{	{ -0.873585f, 0.873585f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.179400f, 0.179400f, -0.967300f }	},
	{	{ 0.000000f, 0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.382700f, -0.923900f }	},
	{	{ 0.000000f, 0.873585f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.195100f, -0.980800f }	},
	{	{ 0.000000f, 0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.923900f, -0.382700f }	},
	{	{ -0.873585f, 0.327668f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, 0.000000f, -0.980800f }	},
	{	{ -0.962974f, 0.327668f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, 0.000000f, -0.923900f }	},
	{	{ -1.000000f, 0.327668f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, 0.000000f, -0.195100f }	},
	{	{ -0.962974f, 0.327668f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, 0.000000f, -0.382700f }	},
	{	{ -1.000000f, 0.327668f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.000000f, 0.327668f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.962974f, 0.962974f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, 0.923900f, -0.000000f }	},
	{	{ -1.000000f, 0.873585f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, 0.195100f, -0.000000f }	},
	{	{ -0.962974f, 0.962974f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, 0.382700f, -0.000000f }	},
	{	{ 0.873585f, 1.000000f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, 0.980800f, -0.000000f }	},
	{	{ 0.873585f, 1.000000f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.179400f, 0.967300f, -0.179400f }	},
	{	{ 0.962974f, 0.873585f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.919400f, 0.158500f, -0.360000f }	},
	{	{ 0.946571f, 0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.888100f, 0.325100f, -0.325100f }	},
	{	{ 0.962974f, 0.962974f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.919400f, 0.360000f, -0.158500f }	},
	{	{ 1.000000f, 0.873585f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.967300f, 0.179400f, -0.179400f }	},
	{	{ 0.962974f, 0.962974f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.360000f, 0.919400f, -0.158500f }	},
	{	{ 0.946571f, 0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325100f, 0.888100f, -0.325100f }	},
	{	{ 0.873585f, 0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.158500f, 0.919400f, -0.360000f }	},
	{	{ 0.873585f, 0.962974f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.158500f, 0.360000f, -0.919400f }	},
	{	{ 0.946571f, 0.946571f, -0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325100f, 0.325100f, -0.888100f }	},
	{	{ 0.962974f, 0.873585f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.360000f, 0.158500f, -0.919400f }	},
	{	{ 0.873585f, 0.873585f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.179400f, 0.179400f, -0.967300f }	},
	{	{ 0.873585f, 0.327668f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, 0.000000f, -0.980800f }	},
	{	{ 0.962974f, 0.327668f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, 0.000000f, -0.923900f }	},
	{	{ 0.962974f, 0.327668f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, 0.000000f, -0.382700f }	},
	{	{ 1.000000f, 0.327668f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, 0.000000f, -0.195100f }	},
	{	{ 1.000000f, 0.327668f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.962974f, 0.962974f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, 0.923900f, -0.000000f }	},
	{	{ 0.962974f, 0.962974f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, 0.382700f, -0.000000f }	},
	{	{ 1.000000f, 0.873585f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, 0.195100f, -0.000000f }	},
	{	{ -0.873585f, 1.000000f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.179400f, 0.967300f, 0.179400f }	},
	{	{ 0.000000f, 1.000000f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.980800f, 0.195100f }	},
	{	{ -0.962974f, 0.873585f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.919400f, 0.158500f, 0.360000f }	},
	{	{ -0.946571f, 0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.888100f, 0.325100f, 0.325100f }	},
	{	{ -0.962974f, 0.962974f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.919400f, 0.360000f, 0.158500f }	},
	{	{ -1.000000f, 0.873585f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.967300f, 0.179400f, 0.179400f }	},
	{	{ -0.962974f, 0.962974f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.360000f, 0.919400f, 0.158500f }	},
	{	{ -0.946571f, 0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.325100f, 0.888100f, 0.325100f }	},
	{	{ -0.873585f, 0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.158500f, 0.919400f, 0.360000f }	},
	{	{ -0.873585f, 0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.158500f, 0.360000f, 0.919400f }	},
	{	{ -0.946571f, 0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.325100f, 0.325100f, 0.888100f }	},
	{	{ -0.962974f, 0.873585f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.360000f, 0.158500f, 0.919400f }	},
	{	{ -0.873585f, 0.873585f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.179400f, 0.179400f, 0.967300f }	},
	{	{ 0.000000f, 0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.382700f, 0.923900f }	},
	{	{ 0.000000f, 0.873585f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.195100f, 0.980800f }	},
	{	{ 0.000000f, 0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.923900f, 0.382700f }	},
	{	{ -0.873585f, 0.327668f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, 0.000000f, 0.980800f }	},
	{	{ -0.962974f, 0.327668f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, 0.000000f, 0.923900f }	},
	{	{ -0.962974f, 0.327668f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, 0.000000f, 0.382700f }	},
	{	{ -1.000000f, 0.327668f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, 0.000000f, 0.195100f }	},
	{	{ 0.000000f, 0.327668f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.873585f, 1.000000f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.179400f, 0.967300f, 0.179400f }	},
	{	{ 0.962974f, 0.962974f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.919400f, 0.360000f, 0.158500f }	},
	{	{ 0.946571f, 0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.888100f, 0.325100f, 0.325100f }	},
	{	{ 0.962974f, 0.873585f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.919400f, 0.158500f, 0.360000f }	},
	{	{ 1.000000f, 0.873585f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.967300f, 0.179400f, 0.179400f }	},
	{	{ 0.873585f, 0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.158500f, 0.919400f, 0.360000f }	},
	{	{ 0.946571f, 0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325100f, 0.888100f, 0.325100f }	},
	{	{ 0.962974f, 0.962974f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.360000f, 0.919400f, 0.158500f }	},
	{	{ 0.962974f, 0.873585f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.360000f, 0.158500f, 0.919400f }	},
	{	{ 0.946571f, 0.946571f, 0.946571f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325100f, 0.325100f, 0.888100f }	},
	{	{ 0.873585f, 0.962974f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.158500f, 0.360000f, 0.919400f }	},
	{	{ 0.873585f, 0.873585f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.179400f, 0.179400f, 0.967300f }	},
	{	{ 0.873585f, 0.327668f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, 0.000000f, 0.980800f }	},
	{	{ 0.962974f, 0.327668f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, 0.000000f, 0.923900f }	},
	{	{ 1.000000f, 0.327668f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, 0.000000f, 0.195100f }	},
	{	{ 0.962974f, 0.327668f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, 0.000000f, 0.382700f }	},
	{	{ -0.873585f, -0.623989f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, 0.000000f, -0.980800f }	},
	{	{ -0.962974f, -0.623989f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, 0.000000f, -0.923900f }	},
	{	{ -0.962974f, -0.623989f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, 0.000000f, -0.382700f }	},
	{	{ -1.000000f, -0.623989f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, 0.000000f, -0.195100f }	},
	{	{ -1.000000f, -0.623989f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.000000f, -0.623989f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.962974f, -0.623989f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, 0.000000f, -0.923900f }	},
	{	{ 0.873585f, -0.623989f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, 0.000000f, -0.980800f }	},
	{	{ 1.000000f, -0.623989f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, 0.000000f, -0.195100f }	},
	{	{ 0.962974f, -0.623989f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, 0.000000f, -0.382700f }	},
	{	{ 1.000000f, -0.623989f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.962974f, -0.623989f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, 0.000000f, 0.923900f }	},
	{	{ -0.873585f, -0.623989f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, 0.000000f, 0.980800f }	},
	{	{ -1.000000f, -0.623989f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, 0.000000f, 0.195100f }	},
	{	{ -0.962974f, -0.623989f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, 0.000000f, 0.382700f }	},
	{	{ 0.000000f, -0.623989f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.873585f, -0.623989f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, 0.000000f, 0.980800f }	},
	{	{ 0.962974f, -0.623989f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, 0.000000f, 0.923900f }	},
	{	{ 0.962974f, -0.623989f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, 0.000000f, 0.382700f }	},
	{	{ 1.000000f, -0.623989f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, 0.000000f, 0.195100f }	},
	{	{ -0.962974f, 0.623989f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, 0.000000f, -0.923900f }	},
	{	{ -0.873585f, 0.623989f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, 0.000000f, -0.980800f }	},
	{	{ -1.000000f, 0.623989f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, 0.000000f, -0.195100f }	},
	{	{ -0.962974f, 0.623989f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, 0.000000f, -0.382700f }	},
	{	{ -1.000000f, 0.623989f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.000000f, 0.623989f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.873585f, 0.623989f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, 0.000000f, -0.980800f }	},
	{	{ 0.962974f, 0.623989f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, 0.000000f, -0.923900f }	},
	{	{ 0.962974f, 0.623989f, -0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, 0.000000f, -0.382700f }	},
	{	{ 1.000000f, 0.623989f, -0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, 0.000000f, -0.195100f }	},
	{	{ 1.000000f, 0.623989f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.873585f, 0.623989f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.195100f, 0.000000f, 0.980800f }	},
	{	{ -0.962974f, 0.623989f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.382700f, 0.000000f, 0.923900f }	},
	{	{ -0.962974f, 0.623989f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.923900f, 0.000000f, 0.382700f }	},
	{	{ -1.000000f, 0.623989f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.980800f, 0.000000f, 0.195100f }	},
	{	{ 0.000000f, 0.623989f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.962974f, 0.623989f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.382700f, 0.000000f, 0.923900f }	},
	{	{ 0.873585f, 0.623989f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.195100f, 0.000000f, 0.980800f }	},
	{	{ 1.000000f, 0.623989f, 0.873585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.980800f, 0.000000f, 0.195100f }	},
	{	{ 0.962974f, 0.623989f, 0.962974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923900f, 0.000000f, 0.382700f }	},
};
#define _Cube_Dirt_Single_vertices_
#endif
#ifndef _Cube_Dirt_Single_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Cube_Dirt_Single_indices[960] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 6,
	 7, 4, 6,
	 8, 9, 10,
	 1, 8, 10,
	 11, 12, 13,
	 14, 11, 13,
	 15, 11, 14,
	 16, 15, 14,
	 2, 1, 10,
	 17, 2, 10,
	 18, 19, 20,
	 21, 18, 20,
	 22, 23, 24,
	 25, 22, 24,
	 25, 24, 26,
	 27, 25, 26,
	 19, 28, 29,
	 20, 19, 29,
	 1, 0, 30,
	 8, 1, 30,
	 6, 31, 32,
	 7, 6, 32,
	 2, 33, 34,
	 3, 2, 34,
	 35, 36, 37,
	 38, 35, 37,
	 39, 40, 41,
	 33, 39, 41,
	 42, 43, 44,
	 45, 42, 44,
	 45, 44, 15,
	 16, 45, 15,
	 39, 33, 2,
	 17, 39, 2,
	 46, 47, 48,
	 49, 46, 48,
	 50, 51, 52,
	 53, 50, 52,
	 54, 50, 53,
	 55, 54, 53,
	 29, 28, 47,
	 46, 29, 47,
	 56, 34, 33,
	 41, 56, 33,
	 57, 58, 35,
	 38, 57, 35,
	 59, 60, 0,
	 3, 59, 0,
	 61, 62, 63,
	 64, 61, 63,
	 65, 66, 67,
	 60, 65, 67,
	 68, 69, 70,
	 71, 68, 70,
	 71, 70, 72,
	 73, 71, 72,
	 65, 60, 59,
	 74, 65, 59,
	 75, 76, 77,
	 78, 75, 77,
	 79, 80, 81,
	 82, 79, 81,
	 26, 79, 82,
	 27, 26, 82,
	 83, 84, 76,
	 75, 83, 76,
	 30, 0, 60,
	 67, 30, 60,
	 32, 31, 61,
	 64, 32, 61,
	 34, 85, 59,
	 3, 34, 59,
	 86, 87, 88,
	 89, 86, 88,
	 90, 91, 92,
	 85, 90, 92,
	 93, 94, 95,
	 96, 93, 95,
	 72, 93, 96,
	 73, 72, 96,
	 59, 85, 92,
	 74, 59, 92,
	 97, 98, 99,
	 100, 97, 99,
	 101, 102, 103,
	 104, 101, 103,
	 104, 103, 54,
	 55, 104, 54,
	 98, 84, 83,
	 99, 98, 83,
	 85, 34, 56,
	 90, 85, 56,
	 88, 58, 57,
	 89, 88, 57,
	 105, 106, 107,
	 108, 105, 107,
	 109, 110, 111,
	 112, 109, 111,
	 113, 114, 115,
	 106, 113, 115,
	 116, 117, 118,
	 119, 116, 118,
	 119, 118, 120,
	 121, 119, 120,
	 113, 106, 105,
	 122, 113, 105,
	 123, 19, 18,
	 124, 123, 18,
	 125, 126, 22,
	 25, 125, 22,
	 127, 125, 25,
	 27, 127, 25,
	 128, 28, 19,
	 123, 128, 19,
	 129, 107, 106,
	 115, 129, 106,
	 130, 131, 109,
	 112, 130, 109,
	 132, 133, 105,
	 108, 132, 105,
	 134, 135, 136,
	 137, 134, 136,
	 138, 139, 140,
	 133, 138, 140,
	 141, 142, 143,
	 144, 141, 143,
	 120, 141, 144,
	 121, 120, 144,
	 105, 133, 140,
	 122, 105, 140,
	 48, 47, 145,
	 146, 48, 145,
	 52, 147, 148,
	 53, 52, 148,
	 53, 148, 149,
	 55, 53, 149,
	 47, 28, 128,
	 145, 47, 128,
	 133, 132, 150,
	 138, 133, 150,
	 136, 151, 152,
	 137, 136, 152,
	 107, 153, 154,
	 108, 107, 154,
	 155, 156, 157,
	 158, 155, 157,
	 159, 160, 161,
	 153, 159, 161,
	 162, 163, 164,
	 165, 162, 164,
	 166, 162, 165,
	 167, 166, 165,
	 154, 153, 161,
	 168, 154, 161,
	 77, 76, 169,
	 170, 77, 169,
	 81, 171, 172,
	 82, 81, 172,
	 82, 172, 127,
	 27, 82, 127,
	 76, 84, 173,
	 169, 76, 173,
	 153, 107, 129,
	 159, 153, 129,
	 157, 131, 130,
	 158, 157, 130,
	 154, 174, 132,
	 108, 154, 132,
	 175, 176, 177,
	 178, 175, 177,
	 179, 180, 181,
	 174, 179, 181,
	 182, 183, 184,
	 185, 182, 184,
	 185, 184, 166,
	 167, 185, 166,
	 179, 174, 154,
	 168, 179, 154,
	 186, 98, 97,
	 187, 186, 97,
	 188, 189, 101,
	 104, 188, 101,
	 149, 188, 104,
	 55, 149, 104,
	 173, 84, 98,
	 186, 173, 98,
	 150, 132, 174,
	 181, 150, 174,
	 152, 151, 175,
	 178, 152, 175,
	 20, 190, 191,
	 21, 20, 191,
	 23, 192, 193,
	 24, 23, 193,
	 24, 193, 194,
	 26, 24, 194,
	 29, 195, 190,
	 20, 29, 190,
	 196, 197, 46,
	 49, 196, 46,
	 198, 199, 51,
	 50, 198, 51,
	 200, 198, 50,
	 54, 200, 50,
	 197, 195, 29,
	 46, 197, 29,
	 201, 202, 75,
	 78, 201, 75,
	 203, 204, 80,
	 79, 203, 80,
	 194, 203, 79,
	 26, 194, 79,
	 202, 205, 83,
	 75, 202, 83,
	 99, 206, 207,
	 100, 99, 207,
	 102, 208, 209,
	 103, 102, 209,
	 103, 209, 200,
	 54, 103, 200,
	 83, 205, 206,
	 99, 83, 206,
	 210, 211, 123,
	 124, 210, 123,
	 212, 213, 126,
	 125, 212, 126,
	 214, 212, 125,
	 127, 214, 125,
	 211, 215, 128,
	 123, 211, 128,
	 145, 216, 217,
	 146, 145, 217,
	 147, 218, 219,
	 148, 147, 219,
	 148, 219, 220,
	 149, 148, 220,
	 128, 215, 216,
	 145, 128, 216,
	 169, 221, 222,
	 170, 169, 222,
	 171, 223, 224,
	 172, 171, 224,
	 172, 224, 214,
	 127, 172, 214,
	 173, 225, 221,
	 169, 173, 221,
	 226, 227, 186,
	 187, 226, 186,
	 228, 229, 189,
	 188, 228, 189,
	 220, 228, 188,
	 149, 220, 188,
	 227, 225, 173,
	 186, 227, 173,
	 193, 7, 32,
	 194, 193, 32,
	 192, 4, 7,
	 193, 192, 7,
	 190, 14, 13,
	 191, 190, 13,
	 195, 16, 14,
	 190, 195, 14,
	 57, 38, 198,
	 200, 57, 198,
	 38, 37, 199,
	 198, 38, 199,
	 42, 45, 197,
	 196, 42, 197,
	 45, 16, 195,
	 197, 45, 195,
	 32, 64, 203,
	 194, 32, 203,
	 64, 63, 204,
	 203, 64, 204,
	 68, 71, 202,
	 201, 68, 202,
	 71, 73, 205,
	 202, 71, 205,
	 209, 89, 57,
	 200, 209, 57,
	 208, 86, 89,
	 209, 208, 89,
	 206, 96, 95,
	 207, 206, 95,
	 205, 73, 96,
	 206, 205, 96,
	 130, 112, 212,
	 214, 130, 212,
	 112, 111, 213,
	 212, 112, 213,
	 116, 119, 211,
	 210, 116, 211,
	 119, 121, 215,
	 211, 119, 215,
	 219, 137, 152,
	 220, 219, 152,
	 218, 134, 137,
	 219, 218, 137,
	 216, 144, 143,
	 217, 216, 143,
	 215, 121, 144,
	 216, 215, 144,
	 224, 158, 130,
	 214, 224, 130,
	 223, 155, 158,
	 224, 223, 158,
	 221, 165, 164,
	 222, 221, 164,
	 225, 167, 165,
	 221, 225, 165,
	 152, 178, 228,
	 220, 152, 228,
	 178, 177, 229,
	 228, 178, 229,
	 182, 185, 227,
	 226, 182, 227,
	 185, 167, 225,
	 227, 185, 225,
};
#define _Cube_Dirt_Single_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Cube_Dirt_Single_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Cube_Dirt_Single_materials[3] =
{
	{
		{{ 0.389513f, 0.197571f, 0.081546f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Dirt_1",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
	{
		{{ 0.254828f, 0.130745f, 0.055087f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Dirt_2",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
	{
		{{ 0.629914f, 0.292244f, 0.135914f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Dirt_3",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Cube_Dirt_Single_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Cube_Dirt_Single_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Cube_Dirt_Single_batches[3][2] =
{
	{ 576, 0 },
	{ 192, 576 },
	{ 192, 768 },
};
#define _Cube_Dirt_Single_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Cube_Dirt_Single_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Cube_Dirt_Single_meshes[3] =
{
	{
		"default",
		576,
		0,
		0,
	},
	{
		"default",
		192,
		576,
		1,
	},
	{
		"default",
		192,
		768,
		2,
	},
};
#define _Cube_Dirt_Single_meshes_
#endif
