// "Pipe_90.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Pipe_90.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Pipe_90_version_
const char Pipe_90_version[4] = { '0','1','9','d' };
#define _Pipe_90_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Pipe_90_vertexcount_
const unsigned Pipe_90_vertexcount = 199;
#define _Pipe_90_vertexcount_
#endif
#ifndef _Pipe_90_indexcount_
const unsigned Pipe_90_indexcount = 768;
#define _Pipe_90_indexcount_
#endif
#ifndef _Pipe_90_materialcount_
const unsigned Pipe_90_materialcount = 1; // can be used for batched draws
#define _Pipe_90_materialcount_
#endif
#ifndef _Pipe_90_meshcount_
const unsigned Pipe_90_meshcount = 1;
#define _Pipe_90_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Pipe_90_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Pipe_90_vertices[199] =
{
	{	{ -0.264949f, -0.462645f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.385400f, 0.164100f, 0.908000f }	},
	{	{ -0.332047f, -1.000000f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.410800f, 0.055500f, 0.910000f }	},
	{	{ 0.000000f, -1.000000f, 0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.015600f, 0.002200f, 0.999900f }	},
	{	{ 0.018471f, -0.580041f, 0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.049100f, 0.021300f, 0.998600f }	},
	{	{ -0.505221f, -0.363121f, 0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.672700f, 0.284500f, 0.683000f }	},
	{	{ -0.613543f, -1.000000f, 0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.725700f, 0.123400f, 0.676800f }	},
	{	{ -0.665765f, -0.296621f, 0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.858300f, 0.361800f, 0.363900f }	},
	{	{ -0.801633f, -1.000000f, 0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.917600f, 0.174700f, 0.357100f }	},
	{	{ -0.722141f, -0.273270f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.921600f, 0.388200f, -0.000000f }	},
	{	{ -0.867681f, -1.000000f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.981200f, 0.193100f, -0.000000f }	},
	{	{ -0.665765f, -0.296621f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.858300f, 0.361800f, -0.363900f }	},
	{	{ -0.801633f, -1.000000f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.917600f, 0.174700f, -0.357100f }	},
	{	{ -0.505220f, -0.363121f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.672700f, 0.284500f, -0.683000f }	},
	{	{ -0.613543f, -1.000000f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.725700f, 0.123400f, -0.676800f }	},
	{	{ -0.264949f, -0.462645f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.385400f, 0.164100f, -0.908000f }	},
	{	{ -0.332047f, -1.000000f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.410800f, 0.055500f, -0.910000f }	},
	{	{ 0.018471f, -0.580042f, -0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.049100f, 0.021300f, -0.998600f }	},
	{	{ 0.000000f, -1.000000f, -0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.015600f, 0.002200f, -0.999900f }	},
	{	{ 0.369619f, -0.728223f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.315700f, -0.138400f, -0.938700f }	},
	{	{ 0.332048f, -1.000000f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.375900f, -0.029200f, -0.926200f }	},
	{	{ 0.609891f, -0.827747f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.599100f, -0.269000f, -0.754100f }	},
	{	{ 0.613544f, -1.000000f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.697500f, -0.067300f, -0.713400f }	},
	{	{ 0.832006f, -0.931189f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.834200f, -0.371600f, -0.407500f }	},
	{	{ 0.801633f, -1.000000f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.874200f, -0.238900f, -0.422800f }	},
	{	{ 0.888382f, -0.954541f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.913000f, -0.408000f, 0.000000f }	},
	{	{ 0.867682f, -1.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.913000f, -0.408000f, 0.000000f }	},
	{	{ 0.832006f, -0.931189f, 0.332048f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.834200f, -0.371600f, 0.407500f }	},
	{	{ 0.801633f, -1.000000f, 0.332048f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.874200f, -0.238900f, 0.422800f }	},
	{	{ 0.609890f, -0.827747f, 0.613544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.599100f, -0.269000f, 0.754100f }	},
	{	{ 0.613543f, -1.000000f, 0.613544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.697500f, -0.067300f, 0.713400f }	},
	{	{ 0.739832f, -1.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.683516f, -1.000000f, -0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.801633f, -1.000000f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.867682f, -1.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.369618f, -0.728223f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.315700f, -0.138400f, 0.938700f }	},
	{	{ 0.332047f, -1.000000f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.375900f, -0.029200f, 0.926200f }	},
	{	{ -0.683514f, -1.000000f, 0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.523139f, -1.000000f, 0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.613543f, -1.000000f, 0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.801633f, -1.000000f, 0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.611335f, -0.602083f, 0.511219f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703000f, 0.137200f, -0.697800f }	},
	{	{ 0.523140f, -1.000000f, 0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.711700f, 0.137700f, -0.688900f }	},
	{	{ 0.283121f, -1.000000f, 0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.371400f, 0.080200f, -0.925000f }	},
	{	{ 0.441138f, -0.466263f, 0.667940f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.230400f, 0.223600f, -0.947100f }	},
	{	{ 0.000001f, -1.000000f, 0.739831f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.035000f, -0.039200f, -0.998600f }	},
	{	{ 0.240378f, -0.306053f, 0.722972f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.042500f, -0.048300f, -0.997900f }	},
	{	{ 1.000000f, 0.283121f, -0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.000000f, -0.739831f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.000000f, -0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.332047f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.000000f, -1.000000f, -0.739831f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.283121f, -1.000000f, -0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.332047f, -1.000000f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.000000f, -1.000000f, -0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 1.000000f, 0.683515f, 0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.739831f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.867682f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.801633f, 0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.739831f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.683514f, 0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.801632f, 0.332048f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.867681f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.739831f, -1.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.867681f, -1.000000f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.683515f, -1.000000f, 0.283122f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.801633f, -1.000000f, 0.332048f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 1.000000f, -0.283121f, -0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.332047f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.283122f, -1.000000f, -0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.332048f, -1.000000f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 1.000000f, 0.683515f, -0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.801633f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.523139f, 0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.613543f, 0.613544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.000001f, 0.739831f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.283122f, 0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.332048f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.000001f, 0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.683514f, -1.000000f, -0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.801633f, -1.000000f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.523140f, -1.000000f, 0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.613543f, -1.000000f, 0.613544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.283121f, -1.000000f, 0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.000001f, -1.000000f, 0.739831f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.000000f, -1.000000f, 0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.332047f, -1.000000f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 1.000000f, -0.523139f, -0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.613543f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.523140f, -1.000000f, -0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.613544f, -1.000000f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 1.000000f, 0.523140f, -0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.613543f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.283120f, 0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.332046f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.523139f, -1.000000f, -0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.613543f, -1.000000f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.283121f, -1.000000f, 0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.332047f, -1.000000f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 1.000000f, 0.523140f, 0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, 0.613544f, 0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.683515f, -0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 1.000000f, -0.801633f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.725057f, -0.692835f, 0.276670f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.920700f, 0.129900f, -0.367900f }	},
	{	{ 0.683515f, -1.000000f, 0.283122f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.924600f, 0.129000f, -0.358400f }	},
	{	{ 0.764990f, -0.724703f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.993700f, 0.111800f, -0.000000f }	},
	{	{ 0.739832f, -1.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.993700f, 0.111800f, -0.000000f }	},
	{	{ 0.725057f, -0.692835f, -0.276669f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.920700f, 0.129900f, 0.367900f }	},
	{	{ 0.683516f, -1.000000f, -0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.924600f, 0.129000f, 0.358400f }	},
	{	{ 0.611335f, -0.602083f, -0.511219f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703000f, 0.137200f, 0.697800f }	},
	{	{ 0.523140f, -1.000000f, -0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.711700f, 0.137700f, 0.688900f }	},
	{	{ 0.441139f, -0.466264f, -0.667939f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.230400f, 0.223600f, 0.947100f }	},
	{	{ 0.283122f, -1.000000f, -0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.371400f, 0.080200f, 0.925000f }	},
	{	{ 0.240378f, -0.306053f, -0.722972f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.042500f, -0.048300f, 0.997900f }	},
	{	{ 0.000000f, -1.000000f, -0.739831f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.035000f, -0.039200f, 0.998600f }	},
	{	{ 0.039618f, -0.145843f, -0.667939f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.316300f, -0.306700f, 0.897700f }	},
	{	{ -0.283121f, -1.000000f, -0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.416800f, -0.175400f, 0.891900f }	},
	{	{ -0.130579f, -0.010022f, -0.511219f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.540700f, -0.511100f, 0.668200f }	},
	{	{ -0.523139f, -1.000000f, -0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703100f, -0.287000f, 0.650600f }	},
	{	{ -0.244300f, 0.080729f, -0.276670f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.683500f, -0.638500f, 0.353800f }	},
	{	{ -0.683514f, -1.000000f, -0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.871200f, -0.355600f, 0.338400f }	},
	{	{ -0.284234f, 0.112597f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.925700f, -0.378200f, 0.000000f }	},
	{	{ -0.739831f, -1.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.925700f, -0.378200f, 0.000000f }	},
	{	{ -0.244300f, 0.080730f, 0.276669f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.683500f, -0.638500f, -0.353800f }	},
	{	{ -0.683514f, -1.000000f, 0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.871200f, -0.355600f, -0.338400f }	},
	{	{ -0.130579f, -0.010022f, 0.511219f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.540700f, -0.511100f, -0.668200f }	},
	{	{ -0.523139f, -1.000000f, 0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703100f, -0.287000f, -0.650600f }	},
	{	{ 0.039618f, -0.145842f, 0.667939f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.316300f, -0.306700f, -0.897700f }	},
	{	{ -0.283121f, -1.000000f, 0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.416800f, -0.175400f, -0.891900f }	},
	{	{ 0.604669f, -0.024628f, 0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.019300f, 0.046800f, 0.998700f }	},
	{	{ 0.295538f, -0.295538f, 0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011900f, 0.010800f, 0.999900f }	},
	{	{ 0.530331f, -0.530331f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.231200f, -0.280100f, 0.931700f }	},
	{	{ 0.746694f, -0.394246f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.138000f, -0.324500f, 0.935800f }	},
	{	{ 0.729379f, -0.729378f, 0.613544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.413100f, -0.554600f, 0.722300f }	},
	{	{ 0.864689f, -0.671461f, 0.613544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.283100f, -0.659000f, 0.696900f }	},
	{	{ 0.862378f, -0.862378f, 0.332048f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.586400f, -0.696400f, 0.413700f }	},
	{	{ 0.931189f, -0.832005f, 0.332048f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.376000f, -0.854200f, 0.359100f }	},
	{	{ 0.909081f, -0.909081f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.408000f, -0.913000f, 0.000000f }	},
	{	{ 0.954541f, -0.888381f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.408000f, -0.913000f, 0.000000f }	},
	{	{ 0.862378f, -0.862378f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.586400f, -0.696400f, -0.413700f }	},
	{	{ 0.931189f, -0.832006f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.376000f, -0.854200f, -0.359100f }	},
	{	{ 0.729379f, -0.729379f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.413100f, -0.554600f, -0.722300f }	},
	{	{ 0.864689f, -0.671461f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.283100f, -0.659000f, -0.696900f }	},
	{	{ 0.530331f, -0.530331f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.231200f, -0.280100f, -0.931700f }	},
	{	{ 0.746694f, -0.394247f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.138000f, -0.324500f, -0.935800f }	},
	{	{ 0.295538f, -0.295538f, -0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011900f, 0.010800f, -0.999900f }	},
	{	{ 0.604670f, -0.024628f, -0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.019300f, 0.046800f, -0.998700f }	},
	{	{ 0.060745f, -0.060745f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.285400f, 0.296400f, -0.911400f }	},
	{	{ 0.487273f, 0.258792f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.159800f, 0.386000f, -0.908500f }	},
	{	{ -0.138302f, 0.138303f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.509100f, 0.525000f, -0.682000f }	},
	{	{ 0.387749f, 0.499064f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.279800f, 0.674900f, -0.682800f }	},
	{	{ -0.271302f, 0.271302f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.650000f, 0.667800f, -0.362600f }	},
	{	{ 0.321250f, 0.659608f, -0.332048f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.356900f, 0.860600f, -0.363400f }	},
	{	{ -0.318005f, 0.318005f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.697900f, 0.716200f, -0.000000f }	},
	{	{ 0.297898f, 0.715984f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.383100f, 0.923700f, -0.000000f }	},
	{	{ -0.271302f, 0.271302f, 0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.650000f, 0.667800f, 0.362600f }	},
	{	{ 0.321250f, 0.659609f, 0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.356900f, 0.860600f, 0.363400f }	},
	{	{ -0.138303f, 0.138303f, 0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.509100f, 0.525000f, 0.682000f }	},
	{	{ 0.387749f, 0.499064f, 0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.279800f, 0.674900f, 0.682800f }	},
	{	{ 0.060745f, -0.060745f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.285400f, 0.296400f, 0.911400f }	},
	{	{ 0.487273f, 0.258792f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.159800f, 0.386000f, 0.908500f }	},
	{	{ 1.000000f, 0.000001f, 0.739831f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.043100f, -0.040600f, -0.998200f }	},
	{	{ 1.000000f, 0.283122f, 0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.207100f, -0.425800f, -0.880800f }	},
	{	{ 1.000000f, 0.523140f, 0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.336900f, -0.699100f, -0.630600f }	},
	{	{ 1.000000f, 0.683515f, 0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.413200f, -0.851300f, -0.323400f }	},
	{	{ -0.284234f, 0.112597f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.437800f, -0.899100f, 0.000000f }	},
	{	{ 1.000000f, 0.739831f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.437800f, -0.899100f, 0.000000f }	},
	{	{ 1.000000f, 0.683515f, -0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.413200f, -0.851300f, 0.323400f }	},
	{	{ 1.000000f, 0.523140f, -0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.336900f, -0.699100f, 0.630600f }	},
	{	{ 1.000000f, 0.283121f, -0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.207100f, -0.425800f, 0.880800f }	},
	{	{ 1.000000f, 0.000000f, -0.739831f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.043100f, -0.040600f, 0.998200f }	},
	{	{ 1.000000f, -0.283121f, -0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.094300f, 0.382400f, 0.919200f }	},
	{	{ 0.611335f, -0.602083f, -0.511219f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.130300f, 0.714300f, 0.687600f }	},
	{	{ 1.000000f, -0.523139f, -0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.127300f, 0.736100f, 0.664800f }	},
	{	{ 0.725057f, -0.692835f, -0.276669f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.053900f, 0.935300f, 0.349700f }	},
	{	{ 1.000000f, -0.683515f, -0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.046500f, 0.943300f, 0.328700f }	},
	{	{ 0.764990f, -0.724703f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013400f, 0.999900f, 0.000000f }	},
	{	{ 1.000000f, -0.739831f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013400f, 0.999900f, 0.000000f }	},
	{	{ 0.725057f, -0.692835f, 0.276670f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.053900f, 0.935300f, -0.349700f }	},
	{	{ 1.000000f, -0.683514f, 0.283121f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.046500f, 0.943300f, -0.328700f }	},
	{	{ 0.611335f, -0.602083f, 0.511219f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.130300f, 0.714300f, -0.687600f }	},
	{	{ 1.000000f, -0.523139f, 0.523140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.127300f, 0.736100f, -0.664800f }	},
	{	{ 1.000000f, -0.283120f, 0.683515f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.094300f, 0.382400f, -0.919200f }	},
	{	{ 1.000000f, 0.332048f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.063000f, 0.411500f, 0.909300f }	},
	{	{ 1.000000f, 0.000001f, 0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000100f, 0.020600f, 0.999800f }	},
	{	{ 1.000000f, 0.613544f, 0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.135500f, 0.724500f, 0.675800f }	},
	{	{ 1.000000f, 0.801633f, 0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.189000f, 0.915000f, 0.356400f }	},
	{	{ 1.000000f, 0.867682f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.208100f, 0.978100f, -0.000000f }	},
	{	{ 1.000000f, 0.801633f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.189000f, 0.915000f, -0.356400f }	},
	{	{ 1.000000f, 0.613543f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.135500f, 0.724500f, -0.675800f }	},
	{	{ 1.000000f, 0.332047f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.063000f, 0.411500f, -0.909300f }	},
	{	{ 1.000000f, 0.000000f, -0.867681f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000100f, 0.020600f, -0.999800f }	},
	{	{ 1.000000f, -0.332047f, -0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.085700f, -0.336700f, -0.937700f }	},
	{	{ 1.000000f, -0.613543f, -0.613543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.241300f, -0.648000f, -0.722400f }	},
	{	{ 1.000000f, -0.801633f, -0.332047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.373200f, -0.849000f, -0.374200f }	},
	{	{ 1.000000f, -0.867681f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.408000f, -0.913000f, 0.000000f }	},
	{	{ 1.000000f, -0.801632f, 0.332048f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.373200f, -0.849000f, 0.374200f }	},
	{	{ 1.000000f, -0.613543f, 0.613544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.241300f, -0.648000f, 0.722400f }	},
	{	{ 1.000000f, -0.332046f, 0.801633f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.085700f, -0.336700f, 0.937700f }	},
	{	{ 0.909081f, -0.909081f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.913000f, -0.408000f, 0.000000f }	},
};
#define _Pipe_90_vertices_
#endif
#ifndef _Pipe_90_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Pipe_90_indices[768] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 1,
	 0, 4, 1,
	 6, 7, 5,
	 4, 6, 5,
	 8, 9, 7,
	 6, 8, 7,
	 10, 11, 9,
	 8, 10, 9,
	 12, 13, 11,
	 10, 12, 11,
	 14, 15, 13,
	 12, 14, 13,
	 16, 17, 15,
	 14, 16, 15,
	 18, 19, 17,
	 16, 18, 17,
	 20, 21, 19,
	 18, 20, 19,
	 22, 23, 21,
	 20, 22, 21,
	 24, 25, 23,
	 22, 24, 23,
	 26, 27, 25,
	 24, 26, 25,
	 28, 29, 27,
	 26, 28, 27,
	 30, 31, 32,
	 33, 30, 32,
	 34, 35, 29,
	 28, 34, 29,
	 3, 2, 35,
	 34, 3, 35,
	 36, 37, 38,
	 39, 36, 38,
	 40, 41, 42,
	 43, 40, 42,
	 43, 42, 44,
	 45, 43, 44,
	 46, 47, 48,
	 49, 46, 48,
	 50, 51, 52,
	 53, 50, 52,
	 54, 55, 56,
	 57, 54, 56,
	 58, 59, 60,
	 61, 58, 60,
	 62, 36, 39,
	 63, 62, 39,
	 64, 30, 33,
	 65, 64, 33,
	 47, 66, 67,
	 48, 47, 67,
	 68, 50, 53,
	 69, 68, 53,
	 55, 70, 71,
	 56, 55, 71,
	 59, 72, 73,
	 60, 59, 73,
	 74, 75, 76,
	 77, 74, 76,
	 78, 62, 63,
	 79, 78, 63,
	 80, 64, 65,
	 81, 80, 65,
	 82, 83, 84,
	 85, 82, 84,
	 66, 86, 87,
	 67, 66, 87,
	 88, 68, 69,
	 89, 88, 69,
	 70, 90, 91,
	 71, 70, 91,
	 72, 92, 93,
	 73, 72, 93,
	 94, 78, 79,
	 95, 94, 79,
	 96, 80, 81,
	 97, 96, 81,
	 75, 98, 99,
	 76, 75, 99,
	 86, 100, 101,
	 87, 86, 101,
	 37, 82, 85,
	 38, 37, 85,
	 31, 88, 89,
	 32, 31, 89,
	 90, 46, 49,
	 91, 90, 49,
	 92, 74, 77,
	 93, 92, 77,
	 51, 94, 95,
	 52, 51, 95,
	 83, 96, 97,
	 84, 83, 97,
	 98, 54, 57,
	 99, 98, 57,
	 100, 58, 61,
	 101, 100, 61,
	 102, 103, 41,
	 40, 102, 41,
	 104, 105, 103,
	 102, 104, 103,
	 106, 107, 105,
	 104, 106, 105,
	 108, 109, 107,
	 106, 108, 107,
	 110, 111, 109,
	 108, 110, 109,
	 112, 113, 111,
	 110, 112, 111,
	 114, 115, 113,
	 112, 114, 113,
	 116, 117, 115,
	 114, 116, 115,
	 118, 119, 117,
	 116, 118, 117,
	 120, 121, 119,
	 118, 120, 119,
	 122, 123, 121,
	 120, 122, 121,
	 124, 125, 123,
	 122, 124, 123,
	 126, 127, 125,
	 124, 126, 125,
	 45, 44, 127,
	 126, 45, 127,
	 128, 129, 130,
	 131, 128, 130,
	 131, 130, 132,
	 133, 131, 132,
	 133, 132, 134,
	 135, 133, 134,
	 135, 134, 136,
	 137, 135, 136,
	 137, 136, 138,
	 139, 137, 138,
	 139, 138, 140,
	 141, 139, 140,
	 141, 140, 142,
	 143, 141, 142,
	 143, 142, 144,
	 145, 143, 144,
	 145, 144, 146,
	 147, 145, 146,
	 147, 146, 148,
	 149, 147, 148,
	 149, 148, 150,
	 151, 149, 150,
	 151, 150, 152,
	 153, 151, 152,
	 153, 152, 154,
	 155, 153, 154,
	 155, 154, 156,
	 157, 155, 156,
	 157, 156, 158,
	 159, 157, 158,
	 159, 158, 129,
	 128, 159, 129,
	 160, 45, 126,
	 161, 160, 126,
	 161, 126, 124,
	 162, 161, 124,
	 124, 122, 163,
	 162, 124, 163,
	 163, 122, 164,
	 165, 163, 164,
	 165, 164, 118,
	 166, 165, 118,
	 166, 118, 116,
	 167, 166, 116,
	 167, 116, 114,
	 168, 167, 114,
	 168, 114, 112,
	 169, 168, 112,
	 169, 112, 110,
	 170, 169, 110,
	 170, 110, 171,
	 172, 170, 171,
	 172, 171, 173,
	 174, 172, 173,
	 174, 173, 175,
	 176, 174, 175,
	 176, 175, 177,
	 178, 176, 177,
	 178, 177, 179,
	 180, 178, 179,
	 181, 43, 45,
	 160, 181, 45,
	 180, 179, 43,
	 181, 180, 43,
	 182, 159, 128,
	 183, 182, 128,
	 184, 157, 159,
	 182, 184, 159,
	 185, 155, 157,
	 184, 185, 157,
	 186, 153, 155,
	 185, 186, 155,
	 187, 151, 153,
	 186, 187, 153,
	 188, 149, 151,
	 187, 188, 151,
	 189, 147, 149,
	 188, 189, 149,
	 190, 145, 147,
	 189, 190, 147,
	 191, 143, 145,
	 190, 191, 145,
	 192, 141, 143,
	 191, 192, 143,
	 193, 139, 141,
	 192, 193, 141,
	 194, 137, 139,
	 193, 194, 139,
	 195, 135, 137,
	 194, 195, 137,
	 196, 133, 135,
	 195, 196, 135,
	 197, 131, 133,
	 196, 197, 133,
	 183, 128, 131,
	 197, 183, 131,
	 129, 3, 34,
	 130, 129, 34,
	 130, 34, 28,
	 132, 130, 28,
	 132, 28, 26,
	 134, 132, 26,
	 134, 26, 24,
	 198, 134, 24,
	 198, 24, 22,
	 138, 198, 22,
	 138, 22, 20,
	 140, 138, 20,
	 140, 20, 18,
	 142, 140, 18,
	 142, 18, 16,
	 144, 142, 16,
	 144, 16, 14,
	 146, 144, 14,
	 146, 14, 12,
	 148, 146, 12,
	 12, 10, 150,
	 148, 12, 150,
	 150, 10, 8,
	 152, 150, 8,
	 152, 8, 6,
	 154, 152, 6,
	 154, 6, 4,
	 156, 154, 4,
	 156, 4, 0,
	 158, 156, 0,
	 158, 0, 3,
	 129, 158, 3,
};
#define _Pipe_90_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Pipe_90_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Pipe_90_materials[1] =
{
	{
		{{ 0.069519f, 0.137383f, 0.261097f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Pipe",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Pipe_90_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Pipe_90_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Pipe_90_batches[1][2] =
{
	{ 768, 0 },
};
#define _Pipe_90_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Pipe_90_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Pipe_90_meshes[1] =
{
	{
		"default",
		768,
		0,
		0,
	},
};
#define _Pipe_90_meshes_
#endif
