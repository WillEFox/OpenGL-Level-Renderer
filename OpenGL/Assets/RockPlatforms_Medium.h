// "RockPlatforms_Medium.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "RockPlatforms_Medium.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _RockPlatforms_Medium_version_
const char RockPlatforms_Medium_version[4] = { '0','1','9','d' };
#define _RockPlatforms_Medium_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _RockPlatforms_Medium_vertexcount_
const unsigned RockPlatforms_Medium_vertexcount = 194;
#define _RockPlatforms_Medium_vertexcount_
#endif
#ifndef _RockPlatforms_Medium_indexcount_
const unsigned RockPlatforms_Medium_indexcount = 864;
#define _RockPlatforms_Medium_indexcount_
#endif
#ifndef _RockPlatforms_Medium_materialcount_
const unsigned RockPlatforms_Medium_materialcount = 1; // can be used for batched draws
#define _RockPlatforms_Medium_materialcount_
#endif
#ifndef _RockPlatforms_Medium_meshcount_
const unsigned RockPlatforms_Medium_meshcount = 1;
#define _RockPlatforms_Medium_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _RockPlatforms_Medium_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT RockPlatforms_Medium_vertices[194] =
{
	{	{ -1.449346f, 2.744278f, -0.604813f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.851400f, 0.419300f, -0.315300f }	},
	{	{ -1.507633f, 2.610108f, -0.625862f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.871200f, 0.372200f, -0.320100f }	},
	{	{ -1.615253f, 2.610170f, 0.015629f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.929100f, 0.369900f, 0.001400f }	},
	{	{ -1.552932f, 2.745051f, 0.012348f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.907300f, 0.420400f, -0.002100f }	},
	{	{ -1.138683f, 2.743534f, -1.120611f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.639900f, 0.419800f, -0.643700f }	},
	{	{ -1.184643f, 2.610081f, -1.162202f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.656500f, 0.376600f, -0.653600f }	},
	{	{ -2.404990f, 0.287283f, 0.001563f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.997600f, 0.069400f, 0.000200f }	},
	{	{ -2.244652f, 0.287291f, 0.962996f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.935400f, 0.066600f, 0.347300f }	},
	{	{ -1.507518f, 2.610245f, 0.656112f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.868500f, 0.376200f, 0.322700f }	},
	{	{ -2.244664f, 0.287277f, -0.959971f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.935300f, 0.070500f, -0.346700f }	},
	{	{ -1.420237f, 2.850254f, 0.008321f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.616400f, 0.787500f, -0.001800f }	},
	{	{ -1.325140f, 2.847234f, -0.555932f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.572800f, 0.791800f, -0.212100f }	},
	{	{ -1.449346f, 2.744278f, -0.604813f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.571700f, 0.791900f, -0.214500f }	},
	{	{ -1.552932f, 2.745051f, 0.012348f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.616300f, 0.787500f, 0.001400f }	},
	{	{ -1.041554f, 2.883873f, 0.004370f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.066900f, 0.997800f, -0.000100f }	},
	{	{ -0.971501f, 2.878736f, -0.484462f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.063500f, 0.997400f, -0.033900f }	},
	{	{ -1.325140f, 2.847234f, -0.555932f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.079800f, 0.996200f, -0.035900f }	},
	{	{ -1.420237f, 2.850254f, 0.008321f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.086400f, 0.996300f, 0.000100f }	},
	{	{ -1.040616f, 2.844236f, -1.027456f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.424700f, 0.798000f, -0.427500f }	},
	{	{ -1.138683f, 2.743534f, -1.120611f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.427400f, 0.798100f, -0.424800f }	},
	{	{ -0.828963f, 2.868364f, -0.820258f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.057600f, 0.996700f, -0.057700f }	},
	{	{ -1.040616f, 2.844236f, -1.027456f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.062900f, 0.996000f, -0.062800f }	},
	{	{ -1.449251f, 2.744391f, 0.628847f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.563800f, 0.797500f, 0.214800f }	},
	{	{ -1.325068f, 2.847319f, 0.572622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.567400f, 0.796900f, 0.207100f }	},
	{	{ -1.138523f, 2.743724f, 1.142375f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.415900f, 0.807200f, 0.418900f }	},
	{	{ -1.040497f, 2.844377f, 1.043122f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.416300f, 0.807200f, 0.418600f }	},
	{	{ -1.325068f, 2.847319f, 0.572622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.079000f, 0.996200f, 0.035700f }	},
	{	{ -0.971456f, 2.878789f, 0.493873f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.063000f, 0.997500f, 0.033500f }	},
	{	{ -1.040497f, 2.844377f, 1.043122f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.061800f, 0.996200f, 0.062100f }	},
	{	{ -0.828888f, 2.868454f, 0.830894f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.056800f, 0.996800f, 0.057000f }	},
	{	{ -1.449251f, 2.744391f, 0.628847f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.847500f, 0.430700f, 0.310300f }	},
	{	{ -1.763652f, 0.287298f, 1.764149f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.704900f, 0.065100f, 0.706300f }	},
	{	{ -1.184445f, 2.610314f, 1.189427f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.650900f, 0.383500f, 0.655200f }	},
	{	{ -1.138523f, 2.743724f, 1.142375f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.632600f, 0.440700f, 0.636800f }	},
	{	{ -0.620968f, 2.744478f, 1.450625f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.307000f, 0.429900f, 0.849100f }	},
	{	{ -0.646054f, 2.610355f, 1.509416f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.318400f, 0.375900f, 0.870200f }	},
	{	{ -0.000008f, 2.610376f, 1.615575f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000900f, 0.370600f, 0.928800f }	},
	{	{ -0.000004f, 2.745215f, 1.553020f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.001400f, 0.422400f, 0.906400f }	},
	{	{ -0.000002f, 0.287304f, 2.405020f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000400f, 0.069000f, 0.997600f }	},
	{	{ 0.961986f, 0.287305f, 2.244639f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.346700f, 0.067800f, 0.935500f }	},
	{	{ 0.646027f, 2.610383f, 1.507400f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.320600f, 0.375300f, 0.869700f }	},
	{	{ -0.961992f, 0.287302f, 2.244840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.345900f, 0.066900f, 0.935900f }	},
	{	{ -0.000002f, 2.850366f, 1.420180f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000800f, 0.788200f, 0.615500f }	},
	{	{ -0.567383f, 2.847377f, 1.325975f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.205700f, 0.796300f, 0.568800f }	},
	{	{ -0.620968f, 2.744478f, 1.450625f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.211800f, 0.796800f, 0.566000f }	},
	{	{ -0.000004f, 2.745215f, 1.553020f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000700f, 0.788200f, 0.615500f }	},
	{	{ -0.000005f, 2.883929f, 1.041737f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000100f, 0.997800f, 0.066800f }	},
	{	{ -0.491130f, 2.878814f, 0.972364f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.033300f, 0.997400f, 0.063100f }	},
	{	{ -0.567383f, 2.847377f, 1.325975f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.035500f, 0.996200f, 0.079200f }	},
	{	{ -0.000002f, 2.850366f, 1.420180f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000100f, 0.996300f, 0.086300f }	},
	{	{ 0.620949f, 2.744500f, 1.448978f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.213800f, 0.795900f, 0.566500f }	},
	{	{ 0.567371f, 2.847394f, 1.324737f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.207800f, 0.795500f, 0.569200f }	},
	{	{ 1.138476f, 2.743779f, 1.138296f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.419000f, 0.805500f, 0.419100f }	},
	{	{ 1.040466f, 2.844416f, 1.040195f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.419100f, 0.805500f, 0.419000f }	},
	{	{ 0.567371f, 2.847394f, 1.324737f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.035700f, 0.996200f, 0.079200f }	},
	{	{ 0.491115f, 2.878826f, 0.971423f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.033500f, 0.997400f, 0.063100f }	},
	{	{ 1.040466f, 2.844416f, 1.040195f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.062100f, 0.996100f, 0.062100f }	},
	{	{ 0.828861f, 2.868481f, 0.828863f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.057000f, 0.996700f, 0.057000f }	},
	{	{ 0.620949f, 2.744500f, 1.448978f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.310300f, 0.427900f, 0.848900f }	},
	{	{ 1.763643f, 0.287305f, 1.763645f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.705500f, 0.066500f, 0.705500f }	},
	{	{ 1.184384f, 2.610383f, 1.184386f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.653400f, 0.382300f, 0.653400f }	},
	{	{ 1.138476f, 2.743779f, 1.138296f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.636100f, 0.436900f, 0.635900f }	},
	{	{ -1.763672f, 0.287274f, -1.761426f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.705500f, 0.072200f, -0.705000f }	},
	{	{ 1.449158f, 2.744500f, 0.620769f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.849400f, 0.427200f, 0.309900f }	},
	{	{ 1.507398f, 2.610383f, 0.646029f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.869900f, 0.375000f, 0.320500f }	},
	{	{ 1.615063f, 2.610376f, 0.000504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.929100f, 0.369900f, -0.000000f }	},
	{	{ 1.552783f, 2.745215f, 0.000232f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.907300f, 0.420600f, -0.000300f }	},
	{	{ 2.404967f, 0.287304f, 0.000051f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.997600f, 0.069400f, -0.000000f }	},
	{	{ 2.244634f, 0.287302f, -0.961786f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.935400f, 0.068200f, -0.346900f }	},
	{	{ 1.507375f, 2.610355f, -0.644012f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.869900f, 0.374300f, -0.321200f }	},
	{	{ 2.244637f, 0.287305f, 0.961988f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.935600f, 0.067800f, 0.346600f }	},
	{	{ 1.420137f, 2.850366f, 0.000040f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.616200f, 0.787600f, -0.000200f }	},
	{	{ 1.325007f, 2.847393f, 0.567101f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.569500f, 0.795300f, 0.207700f }	},
	{	{ 1.449158f, 2.744500f, 0.620769f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.566700f, 0.795700f, 0.213700f }	},
	{	{ 1.552783f, 2.745215f, 0.000232f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.616200f, 0.787600f, -0.000000f }	},
	{	{ 1.041497f, 2.883929f, 0.000235f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.066700f, 0.997800f, -0.000000f }	},
	{	{ 0.971421f, 2.878826f, 0.491117f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.063100f, 0.997400f, 0.033500f }	},
	{	{ 1.325007f, 2.847393f, 0.567101f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.079200f, 0.996200f, 0.035700f }	},
	{	{ 1.420137f, 2.850366f, 0.000040f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.086200f, 0.996300f, -0.000000f }	},
	{	{ 1.449139f, 2.744478f, -0.619482f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.567300f, 0.795100f, -0.214400f }	},
	{	{ 1.324993f, 2.847377f, -0.566402f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.569900f, 0.794700f, -0.208900f }	},
	{	{ 1.138429f, 2.743724f, -1.134577f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.420100f, 0.803100f, -0.422500f }	},
	{	{ 1.040432f, 2.844377f, -1.037806f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.419100f, 0.803100f, -0.423500f }	},
	{	{ 1.324993f, 2.847377f, -0.566402f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.079200f, 0.996200f, -0.035800f }	},
	{	{ 0.971410f, 2.878814f, -0.490176f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.063100f, 0.997400f, -0.033600f }	},
	{	{ 1.040432f, 2.844377f, -1.037806f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.062000f, 0.996100f, -0.062400f }	},
	{	{ 0.828837f, 2.868454f, -0.826831f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.056900f, 0.996700f, -0.057300f }	},
	{	{ 1.449139f, 2.744478f, -0.619482f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.849500f, 0.425500f, -0.311900f }	},
	{	{ 1.763637f, 0.287298f, -1.763140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.704700f, 0.068200f, -0.706200f }	},
	{	{ 1.184325f, 2.610314f, -1.179343f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.652200f, 0.380200f, -0.655800f }	},
	{	{ 1.138429f, 2.743724f, -1.134577f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.634400f, 0.431000f, -0.641700f }	},
	{	{ 0.620856f, 2.744390f, -1.441261f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.304900f, 0.414900f, -0.857300f }	},
	{	{ 0.645911f, 2.610245f, -1.497316f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.316800f, 0.370700f, -0.873100f }	},
	{	{ -0.000182f, 2.610170f, -1.599442f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.004800f, 0.363600f, -0.931500f }	},
	{	{ -0.000144f, 2.745050f, -1.540440f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.006900f, 0.402500f, -0.915400f }	},
	{	{ -0.000020f, 0.287283f, -2.403407f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.001800f, 0.075400f, -0.997200f }	},
	{	{ -0.962013f, 0.287277f, -2.242622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.347500f, 0.074900f, -0.934700f }	},
	{	{ -0.646262f, 2.610108f, -1.487233f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.324900f, 0.367900f, -0.871300f }	},
	{	{ 0.961975f, 0.287291f, -2.243630f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.344900f, 0.071600f, -0.935900f }	},
	{	{ -0.000098f, 2.850253f, -1.411818f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.004200f, 0.778600f, -0.627500f }	},
	{	{ 0.567308f, 2.847318f, -1.319755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.206000f, 0.789400f, -0.578300f }	},
	{	{ 0.620856f, 2.744390f, -1.441261f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.213400f, 0.790000f, -0.574800f }	},
	{	{ -0.000144f, 2.745050f, -1.540440f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.003700f, 0.778600f, -0.627500f }	},
	{	{ -0.000052f, 2.883873f, -1.037132f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000400f, 0.997700f, -0.067400f }	},
	{	{ 0.491083f, 2.878789f, -0.968667f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.033300f, 0.997400f, -0.063600f }	},
	{	{ 0.567308f, 2.847318f, -1.319755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.035500f, 0.996200f, -0.079900f }	},
	{	{ -0.000098f, 2.850253f, -1.411818f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000400f, 0.996200f, -0.087300f }	},
	{	{ -0.621137f, 2.744278f, -1.433022f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.220900f, 0.786000f, -0.577400f }	},
	{	{ -0.567504f, 2.847234f, -1.313568f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.213800f, 0.785500f, -0.580800f }	},
	{	{ -0.567504f, 2.847234f, -1.313568f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.036400f, 0.996100f, -0.080200f }	},
	{	{ -0.491195f, 2.878736f, -0.964768f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.034000f, 0.997400f, -0.063800f }	},
	{	{ -0.621137f, 2.744278f, -1.433022f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.316400f, 0.406300f, -0.857200f }	},
	{	{ -0.000002f, 0.006178f, 0.929653f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.999900f, 0.016000f }	},
	{	{ -0.864640f, 0.011993f, 0.864638f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017100f, -0.999700f, 0.017100f }	},
	{	{ -0.929654f, 0.006178f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.016000f, -0.999900f, -0.000000f }	},
	{	{ -0.000002f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.000002f, 0.024621f, 1.703012f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.998900f, 0.046600f }	},
	{	{ -0.798705f, 0.029255f, 1.584921f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.022700f, -0.998700f, 0.044700f }	},
	{	{ -1.584923f, 0.029255f, 0.798704f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.044700f, -0.998700f, 0.022700f }	},
	{	{ -1.703013f, 0.024621f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.046600f, -0.998900f, -0.000000f }	},
	{	{ -1.345967f, 0.038643f, 1.345966f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.040700f, -0.998300f, 0.040700f }	},
	{	{ 0.929651f, 0.006178f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016000f, -0.999900f, -0.000000f }	},
	{	{ 0.864636f, 0.011993f, 0.864638f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.017100f, -0.999700f, 0.017100f }	},
	{	{ 1.703010f, 0.024621f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.046600f, -0.998900f, -0.000000f }	},
	{	{ 1.584919f, 0.029255f, 0.798704f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.044700f, -0.998700f, 0.022700f }	},
	{	{ 0.798702f, 0.029255f, 1.584921f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.022700f, -0.998700f, 0.044700f }	},
	{	{ 1.345964f, 0.038643f, 1.345966f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.040700f, -0.998300f, 0.040700f }	},
	{	{ -0.000002f, 0.006178f, -0.929652f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.999900f, -0.016000f }	},
	{	{ 0.864636f, 0.011993f, -0.864638f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.017100f, -0.999700f, -0.017100f }	},
	{	{ -0.000002f, 0.024621f, -1.703011f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.998900f, -0.046600f }	},
	{	{ 0.798702f, 0.029255f, -1.584921f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.022700f, -0.998700f, -0.044700f }	},
	{	{ 1.584919f, 0.029255f, -0.798703f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.044700f, -0.998700f, -0.022700f }	},
	{	{ 1.345963f, 0.038643f, -1.345965f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.040700f, -0.998300f, -0.040700f }	},
	{	{ -0.864640f, 0.011993f, -0.864638f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.017100f, -0.999700f, -0.017100f }	},
	{	{ -1.584923f, 0.029255f, -0.798703f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.044700f, -0.998700f, -0.022700f }	},
	{	{ -0.798705f, 0.029255f, -1.584921f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.022700f, -0.998700f, -0.044700f }	},
	{	{ -1.345967f, 0.038643f, -1.345965f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.040700f, -0.998300f, -0.040700f }	},
	{	{ -0.000005f, 2.904252f, 0.566022f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.999600f, 0.028700f }	},
	{	{ 0.527583f, 2.897848f, 0.527585f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.030200f, 0.999100f, 0.030200f }	},
	{	{ 0.565725f, 2.904252f, 0.000291f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.028600f, 0.999600f, -0.000000f }	},
	{	{ -0.000011f, 2.911053f, 0.000784f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.565756f, 2.904228f, 0.002039f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.028700f, 0.999600f, -0.000100f }	},
	{	{ -0.527600f, 2.897833f, 0.528750f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.030200f, 0.999100f, 0.030200f }	},
	{	{ -0.000025f, 2.904228f, -0.563691f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000100f, 0.999600f, -0.028800f }	},
	{	{ -0.527630f, 2.897797f, -0.523820f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.030500f, 0.999100f, -0.030500f }	},
	{	{ 0.527569f, 2.897833f, -0.526419f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.030200f, 0.999100f, -0.030300f }	},
	{	{ 0.949384f, 0.132240f, -2.216887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.114400f, -0.946700f, -0.301000f }	},
	{	{ 0.860955f, 0.057783f, -2.016494f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.073400f, -0.977400f, -0.198200f }	},
	{	{ -0.000002f, 0.055239f, -2.163784f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.976700f, -0.214600f }	},
	{	{ -0.000006f, 0.131602f, -2.375929f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.943100f, -0.332500f }	},
	{	{ 1.741018f, 0.132878f, -1.740895f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.219300f, -0.950700f, -0.219300f }	},
	{	{ 1.580318f, 0.060327f, -1.580320f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.147800f, -0.977900f, -0.147800f }	},
	{	{ 0.949384f, 0.132240f, -2.216887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.337600f, -0.186400f, -0.922600f }	},
	{	{ -0.000006f, 0.131602f, -2.375929f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000300f, -0.177200f, -0.984200f }	},
	{	{ 1.741018f, 0.132878f, -1.740895f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.692800f, -0.197400f, -0.693500f }	},
	{	{ -0.949397f, 0.132237f, -2.216635f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.338200f, -0.182600f, -0.923200f }	},
	{	{ -1.741030f, 0.132872f, -1.740466f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.693000f, -0.192600f, -0.694700f }	},
	{	{ -0.860959f, 0.057783f, -2.016494f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.073500f, -0.977400f, -0.198300f }	},
	{	{ -0.949397f, 0.132237f, -2.216635f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.114500f, -0.946600f, -0.301200f }	},
	{	{ -1.580322f, 0.060327f, -1.580320f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.147900f, -0.977900f, -0.148000f }	},
	{	{ -1.741030f, 0.132872f, -1.740466f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.219600f, -0.950600f, -0.219500f }	},
	{	{ 2.217138f, 0.132244f, 0.949389f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.300700f, -0.946800f, 0.114300f }	},
	{	{ 2.016492f, 0.057783f, 0.860957f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.198000f, -0.977500f, 0.073400f }	},
	{	{ 2.163782f, 0.055239f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.214400f, -0.976800f, -0.000000f }	},
	{	{ 2.376318f, 0.131607f, 0.000013f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.332000f, -0.943300f, 0.000000f }	},
	{	{ 1.741019f, 0.132880f, 1.741021f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.219200f, -0.950700f, 0.219200f }	},
	{	{ 1.580318f, 0.060327f, 1.580320f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.147700f, -0.977900f, 0.147700f }	},
	{	{ 2.217138f, 0.132244f, 0.949389f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.921600f, -0.190900f, 0.337900f }	},
	{	{ 2.376318f, 0.131607f, 0.000013f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.982900f, -0.184200f, -0.000000f }	},
	{	{ 1.741019f, 0.132880f, 1.741021f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.692900f, -0.199400f, 0.692900f }	},
	{	{ 2.217137f, 0.132243f, -0.949338f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.921700f, -0.190500f, -0.338000f }	},
	{	{ 2.016492f, 0.057783f, -0.860957f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.198000f, -0.977400f, -0.073400f }	},
	{	{ 2.217137f, 0.132243f, -0.949338f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.300700f, -0.946800f, -0.114300f }	},
	{	{ -0.949391f, 0.132243f, 2.217190f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.114200f, -0.946900f, 0.300700f }	},
	{	{ -0.860959f, 0.057783f, 2.016495f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.073400f, -0.977500f, 0.198000f }	},
	{	{ -0.000002f, 0.055239f, 2.163785f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.976800f, 0.214300f }	},
	{	{ -0.000002f, 0.131607f, 2.376333f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.943300f, 0.331900f }	},
	{	{ -1.741024f, 0.132878f, 1.741148f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.219100f, -0.950800f, 0.219200f }	},
	{	{ -1.580322f, 0.060327f, 1.580320f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.147700f, -0.977900f, 0.147700f }	},
	{	{ -0.949391f, 0.132243f, 2.217190f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.337700f, -0.191900f, 0.921500f }	},
	{	{ -0.000002f, 0.131607f, 2.376333f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000100f, -0.184600f, 0.982800f }	},
	{	{ -1.741024f, 0.132878f, 1.741148f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.692700f, -0.201100f, 0.692600f }	},
	{	{ 0.949387f, 0.132244f, 2.217140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.337900f, -0.191000f, 0.921600f }	},
	{	{ 0.860955f, 0.057783f, 2.016495f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.073400f, -0.977500f, 0.198000f }	},
	{	{ 0.949387f, 0.132244f, 2.217140f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.114300f, -0.946800f, 0.300700f }	},
	{	{ -2.217147f, 0.132237f, -0.948885f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.300900f, -0.946800f, -0.114300f }	},
	{	{ -2.016496f, 0.057783f, -0.860957f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.198100f, -0.977400f, -0.073500f }	},
	{	{ -2.163786f, 0.055239f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.214300f, -0.976800f, -0.000000f }	},
	{	{ -2.376327f, 0.131602f, 0.000391f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.331900f, -0.943300f, 0.000100f }	},
	{	{ -2.217147f, 0.132237f, -0.948885f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.921800f, -0.187900f, -0.339100f }	},
	{	{ -2.376327f, 0.131602f, 0.000391f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.982900f, -0.184200f, -0.000800f }	},
	{	{ -2.217144f, 0.132240f, 0.949641f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.921500f, -0.192400f, 0.337400f }	},
	{	{ -2.016496f, 0.057783f, 0.860957f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.197900f, -0.977500f, 0.073300f }	},
	{	{ -2.217144f, 0.132240f, 0.949641f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.300600f, -0.946900f, 0.114300f }	},
};
#define _RockPlatforms_Medium_vertices_
#endif
#ifndef _RockPlatforms_Medium_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int RockPlatforms_Medium_indices[864] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 1,
	 0, 4, 1,
	 2, 6, 7,
	 8, 2, 7,
	 6, 2, 1,
	 9, 6, 1,
	 10, 11, 12,
	 13, 10, 12,
	 14, 15, 16,
	 17, 14, 16,
	 11, 18, 19,
	 12, 11, 19,
	 20, 21, 16,
	 15, 20, 16,
	 22, 23, 10,
	 13, 22, 10,
	 24, 25, 23,
	 22, 24, 23,
	 26, 27, 14,
	 17, 26, 14,
	 28, 29, 27,
	 26, 28, 27,
	 2, 8, 30,
	 3, 2, 30,
	 8, 7, 31,
	 32, 8, 31,
	 8, 32, 33,
	 30, 8, 33,
	 34, 35, 36,
	 37, 34, 36,
	 33, 32, 35,
	 34, 33, 35,
	 36, 38, 39,
	 40, 36, 39,
	 38, 36, 35,
	 41, 38, 35,
	 42, 43, 44,
	 45, 42, 44,
	 46, 47, 48,
	 49, 46, 48,
	 43, 25, 24,
	 44, 43, 24,
	 47, 29, 28,
	 48, 47, 28,
	 50, 51, 42,
	 45, 50, 42,
	 52, 53, 51,
	 50, 52, 51,
	 54, 55, 46,
	 49, 54, 46,
	 56, 57, 55,
	 54, 56, 55,
	 36, 40, 58,
	 37, 36, 58,
	 40, 39, 59,
	 60, 40, 59,
	 40, 60, 61,
	 58, 40, 61,
	 9, 1, 5,
	 62, 9, 5,
	 63, 64, 65,
	 66, 63, 65,
	 61, 60, 64,
	 63, 61, 64,
	 65, 67, 68,
	 69, 65, 68,
	 67, 65, 64,
	 70, 67, 64,
	 71, 72, 73,
	 74, 71, 73,
	 75, 76, 77,
	 78, 75, 77,
	 72, 53, 52,
	 73, 72, 52,
	 76, 57, 56,
	 77, 76, 56,
	 79, 80, 71,
	 74, 79, 71,
	 81, 82, 80,
	 79, 81, 80,
	 83, 84, 75,
	 78, 83, 75,
	 85, 86, 84,
	 83, 85, 84,
	 65, 69, 87,
	 66, 65, 87,
	 69, 68, 88,
	 89, 69, 88,
	 69, 89, 90,
	 87, 69, 90,
	 31, 41, 35,
	 32, 31, 35,
	 91, 92, 93,
	 94, 91, 93,
	 90, 89, 92,
	 91, 90, 92,
	 93, 95, 96,
	 97, 93, 96,
	 95, 93, 92,
	 98, 95, 92,
	 99, 100, 101,
	 102, 99, 101,
	 103, 104, 105,
	 106, 103, 105,
	 100, 82, 81,
	 101, 100, 81,
	 104, 86, 85,
	 105, 104, 85,
	 107, 108, 99,
	 102, 107, 99,
	 19, 18, 108,
	 107, 19, 108,
	 109, 110, 103,
	 106, 109, 103,
	 21, 20, 110,
	 109, 21, 110,
	 93, 97, 111,
	 94, 93, 111,
	 5, 97, 96,
	 62, 5, 96,
	 97, 5, 4,
	 111, 97, 4,
	 59, 70, 64,
	 60, 59, 64,
	 112, 113, 114,
	 115, 112, 114,
	 116, 117, 113,
	 112, 116, 113,
	 113, 118, 119,
	 114, 113, 119,
	 117, 120, 118,
	 113, 117, 118,
	 121, 122, 112,
	 115, 121, 112,
	 123, 124, 122,
	 121, 123, 122,
	 122, 125, 116,
	 112, 122, 116,
	 124, 126, 125,
	 122, 124, 125,
	 127, 128, 121,
	 115, 127, 121,
	 129, 130, 128,
	 127, 129, 128,
	 128, 131, 123,
	 121, 128, 123,
	 130, 132, 131,
	 128, 130, 131,
	 114, 133, 127,
	 115, 114, 127,
	 119, 134, 133,
	 114, 119, 133,
	 133, 135, 129,
	 127, 133, 129,
	 134, 136, 135,
	 133, 134, 135,
	 137, 138, 139,
	 140, 137, 139,
	 46, 55, 138,
	 137, 46, 138,
	 138, 76, 75,
	 139, 138, 75,
	 55, 57, 76,
	 138, 55, 76,
	 141, 142, 137,
	 140, 141, 137,
	 14, 27, 142,
	 141, 14, 142,
	 142, 47, 46,
	 137, 142, 46,
	 27, 29, 47,
	 142, 27, 47,
	 143, 144, 141,
	 140, 143, 141,
	 103, 110, 144,
	 143, 103, 144,
	 144, 15, 14,
	 141, 144, 14,
	 110, 20, 15,
	 144, 110, 15,
	 139, 145, 143,
	 140, 139, 143,
	 75, 84, 145,
	 139, 75, 145,
	 145, 104, 103,
	 143, 145, 103,
	 84, 86, 104,
	 145, 84, 104,
	 146, 147, 148,
	 149, 146, 148,
	 150, 151, 147,
	 146, 150, 147,
	 147, 130, 129,
	 148, 147, 129,
	 151, 132, 130,
	 147, 151, 130,
	 95, 98, 152,
	 153, 95, 152,
	 98, 88, 154,
	 152, 98, 154,
	 155, 96, 95,
	 153, 155, 95,
	 156, 62, 96,
	 155, 156, 96,
	 148, 157, 158,
	 149, 148, 158,
	 129, 135, 157,
	 148, 129, 157,
	 157, 159, 160,
	 158, 157, 160,
	 135, 136, 159,
	 157, 135, 159,
	 161, 162, 163,
	 164, 161, 163,
	 165, 166, 162,
	 161, 165, 162,
	 162, 124, 123,
	 163, 162, 123,
	 166, 126, 124,
	 162, 166, 124,
	 67, 70, 167,
	 168, 67, 167,
	 70, 59, 169,
	 167, 70, 169,
	 170, 68, 67,
	 168, 170, 67,
	 154, 88, 68,
	 170, 154, 68,
	 163, 171, 172,
	 164, 163, 172,
	 123, 131, 171,
	 163, 123, 171,
	 171, 151, 150,
	 172, 171, 150,
	 131, 132, 151,
	 171, 131, 151,
	 173, 174, 175,
	 176, 173, 175,
	 177, 178, 174,
	 173, 177, 174,
	 174, 117, 116,
	 175, 174, 116,
	 178, 120, 117,
	 174, 178, 117,
	 38, 41, 179,
	 180, 38, 179,
	 41, 31, 181,
	 179, 41, 181,
	 182, 39, 38,
	 180, 182, 38,
	 169, 59, 39,
	 182, 169, 39,
	 175, 183, 184,
	 176, 175, 184,
	 116, 125, 183,
	 175, 116, 183,
	 183, 166, 165,
	 184, 183, 165,
	 125, 126, 166,
	 183, 125, 166,
	 185, 186, 187,
	 188, 185, 187,
	 160, 159, 186,
	 185, 160, 186,
	 186, 134, 119,
	 187, 186, 119,
	 159, 136, 134,
	 186, 159, 134,
	 6, 9, 189,
	 190, 6, 189,
	 9, 62, 156,
	 189, 9, 156,
	 191, 7, 6,
	 190, 191, 6,
	 181, 31, 7,
	 191, 181, 7,
	 88, 98, 92,
	 89, 88, 92,
	 187, 192, 193,
	 188, 187, 193,
	 119, 118, 192,
	 187, 119, 192,
	 192, 178, 177,
	 193, 192, 177,
	 118, 120, 178,
	 192, 118, 178,
};
#define _RockPlatforms_Medium_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _RockPlatforms_Medium_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL RockPlatforms_Medium_materials[1] =
{
	{
		{{ 0.307496f, 0.166068f, 0.086368f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Rock",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _RockPlatforms_Medium_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _RockPlatforms_Medium_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int RockPlatforms_Medium_batches[1][2] =
{
	{ 864, 0 },
};
#define _RockPlatforms_Medium_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _RockPlatforms_Medium_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH RockPlatforms_Medium_meshes[1] =
{
	{
		"default",
		864,
		0,
		0,
	},
};
#define _RockPlatforms_Medium_meshes_
#endif
